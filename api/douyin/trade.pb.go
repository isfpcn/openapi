// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: api/douyin/trade.proto

package douyin

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type MerchantAuditCallbackRequest struct {
	// 小程序appid
	Appid string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty" form:"appid" validate:"required"`
	// 开发者侧退款单号，长度 <= 64 byte
	OutRefundNo string `protobuf:"bytes,2,opt,name=out_refund_no,json=outRefundNo,proto3" json:"out_refund_no,omitempty" form:"out_refund_no" validate:"required"`
	// 审核状态  1：同意退款 2：不同意退款
	RefundAuditStatus int64 `protobuf:"varint,3,opt,name=refund_audit_status,json=refundAuditStatus,proto3" json:"refund_audit_status,omitempty" form:"refund_audit_status" validate:"required"`
	// 不同意退款信息(不同意退款时必填)，长度 <= 512 byte
	DenyMessage          string   `protobuf:"bytes,4,opt,name=deny_message,json=denyMessage,proto3" json:"deny_message,omitempty" form:"deny_message"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerchantAuditCallbackRequest) Reset()         { *m = MerchantAuditCallbackRequest{} }
func (m *MerchantAuditCallbackRequest) String() string { return proto.CompactTextString(m) }
func (*MerchantAuditCallbackRequest) ProtoMessage()    {}
func (*MerchantAuditCallbackRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{0}
}
func (m *MerchantAuditCallbackRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantAuditCallbackRequest.Unmarshal(m, b)
}
func (m *MerchantAuditCallbackRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantAuditCallbackRequest.Marshal(b, m, deterministic)
}
func (m *MerchantAuditCallbackRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantAuditCallbackRequest.Merge(m, src)
}
func (m *MerchantAuditCallbackRequest) XXX_Size() int {
	return xxx_messageInfo_MerchantAuditCallbackRequest.Size(m)
}
func (m *MerchantAuditCallbackRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantAuditCallbackRequest.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantAuditCallbackRequest proto.InternalMessageInfo

func (m *MerchantAuditCallbackRequest) GetAppid() string {
	if m != nil {
		return m.Appid
	}
	return ""
}

func (m *MerchantAuditCallbackRequest) GetOutRefundNo() string {
	if m != nil {
		return m.OutRefundNo
	}
	return ""
}

func (m *MerchantAuditCallbackRequest) GetRefundAuditStatus() int64 {
	if m != nil {
		return m.RefundAuditStatus
	}
	return 0
}

func (m *MerchantAuditCallbackRequest) GetDenyMessage() string {
	if m != nil {
		return m.DenyMessage
	}
	return ""
}

type MerchantAuditCallbackResponse struct {
	// 抖音错误码
	ErrNo int64 `protobuf:"varint,1,opt,name=err_no,json=errNo,proto3" json:"err_no,omitempty"`
	// 抖音错误信息
	ErrTips              string   `protobuf:"bytes,2,opt,name=err_tips,json=errTips,proto3" json:"err_tips,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerchantAuditCallbackResponse) Reset()         { *m = MerchantAuditCallbackResponse{} }
func (m *MerchantAuditCallbackResponse) String() string { return proto.CompactTextString(m) }
func (*MerchantAuditCallbackResponse) ProtoMessage()    {}
func (*MerchantAuditCallbackResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{1}
}
func (m *MerchantAuditCallbackResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantAuditCallbackResponse.Unmarshal(m, b)
}
func (m *MerchantAuditCallbackResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantAuditCallbackResponse.Marshal(b, m, deterministic)
}
func (m *MerchantAuditCallbackResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantAuditCallbackResponse.Merge(m, src)
}
func (m *MerchantAuditCallbackResponse) XXX_Size() int {
	return xxx_messageInfo_MerchantAuditCallbackResponse.Size(m)
}
func (m *MerchantAuditCallbackResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantAuditCallbackResponse.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantAuditCallbackResponse proto.InternalMessageInfo

func (m *MerchantAuditCallbackResponse) GetErrNo() int64 {
	if m != nil {
		return m.ErrNo
	}
	return 0
}

func (m *MerchantAuditCallbackResponse) GetErrTips() string {
	if m != nil {
		return m.ErrTips
	}
	return ""
}

// log
type MerchantAuditCallbackResponse_Resp struct {
	Logid                string   `protobuf:"bytes,1,opt,name=logid,proto3" json:"logid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerchantAuditCallbackResponse_Resp) Reset()         { *m = MerchantAuditCallbackResponse_Resp{} }
func (m *MerchantAuditCallbackResponse_Resp) String() string { return proto.CompactTextString(m) }
func (*MerchantAuditCallbackResponse_Resp) ProtoMessage()    {}
func (*MerchantAuditCallbackResponse_Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{1, 0}
}
func (m *MerchantAuditCallbackResponse_Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantAuditCallbackResponse_Resp.Unmarshal(m, b)
}
func (m *MerchantAuditCallbackResponse_Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantAuditCallbackResponse_Resp.Marshal(b, m, deterministic)
}
func (m *MerchantAuditCallbackResponse_Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantAuditCallbackResponse_Resp.Merge(m, src)
}
func (m *MerchantAuditCallbackResponse_Resp) XXX_Size() int {
	return xxx_messageInfo_MerchantAuditCallbackResponse_Resp.Size(m)
}
func (m *MerchantAuditCallbackResponse_Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantAuditCallbackResponse_Resp.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantAuditCallbackResponse_Resp proto.InternalMessageInfo

func (m *MerchantAuditCallbackResponse_Resp) GetLogid() string {
	if m != nil {
		return m.Logid
	}
	return ""
}

type CreateRefundRequest struct {
	// 小程序appid
	Appid string `protobuf:"bytes,1,opt,name=appid,proto3" json:"appid,omitempty" form:"appid" validate:"required"`
	// 开发者侧订单号，长度 <= 64 byte
	OutOrderNo string `protobuf:"bytes,2,opt,name=out_order_no,json=outOrderNo,proto3" json:"out_order_no,omitempty" form:"out_order_no" validate:"required"`
	// 开发者侧退款单号，长度 <= 64 byte
	OutRefundNo string `protobuf:"bytes,3,opt,name=out_refund_no,json=outRefundNo,proto3" json:"out_refund_no,omitempty" form:"out_refund_no" validate:"required"`
	// 开发者自定义透传字段，不支持二进制，长度 <= 2048 byte
	CpExtra string `protobuf:"bytes,4,opt,name=cp_extra,json=cpExtra,proto3" json:"cp_extra,omitempty" form:"cp_extra"`
	// 退款单的跳转的 schema
	OrderEntrySchema *OrderEntrySchema `protobuf:"bytes,5,opt,name=order_entry_schema,json=orderEntrySchema,proto3" json:"order_entry_schema,omitempty" form:"order_entry_schema" validate:"required"`
	// 退款结果通知地址，必须是 HTTPS 类型，若不填，默认使用在抖音开放平台-小程序应用详情-能力-支付页面设置的支付回调地址。
	NotifyUrl string `protobuf:"bytes,6,opt,name=notify_url,json=notifyUrl,proto3" json:"notify_url,omitempty" form:"notify_url"`
	// 需要发起退款的商品单信息，数组长度<100
	// 注意：交易系统订单必传
	ItemOrderDetail []*ItemOrderDetail `protobuf:"bytes,7,rep,name=item_order_detail,json=itemOrderDetail,proto3" json:"item_order_detail,omitempty" form:"item_order_detail"`
	// 退款总金额，单位分   担保交易订单必传     交易系统订单不能传该字段
	RefundTotalAmount    int64    `protobuf:"varint,8,opt,name=refund_total_amount,json=refundTotalAmount,proto3" json:"refund_total_amount,omitempty" form:"refund_total_amount"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRefundRequest) Reset()         { *m = CreateRefundRequest{} }
func (m *CreateRefundRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRefundRequest) ProtoMessage()    {}
func (*CreateRefundRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{2}
}
func (m *CreateRefundRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRefundRequest.Unmarshal(m, b)
}
func (m *CreateRefundRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRefundRequest.Marshal(b, m, deterministic)
}
func (m *CreateRefundRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRefundRequest.Merge(m, src)
}
func (m *CreateRefundRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRefundRequest.Size(m)
}
func (m *CreateRefundRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRefundRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRefundRequest proto.InternalMessageInfo

func (m *CreateRefundRequest) GetAppid() string {
	if m != nil {
		return m.Appid
	}
	return ""
}

func (m *CreateRefundRequest) GetOutOrderNo() string {
	if m != nil {
		return m.OutOrderNo
	}
	return ""
}

func (m *CreateRefundRequest) GetOutRefundNo() string {
	if m != nil {
		return m.OutRefundNo
	}
	return ""
}

func (m *CreateRefundRequest) GetCpExtra() string {
	if m != nil {
		return m.CpExtra
	}
	return ""
}

func (m *CreateRefundRequest) GetOrderEntrySchema() *OrderEntrySchema {
	if m != nil {
		return m.OrderEntrySchema
	}
	return nil
}

func (m *CreateRefundRequest) GetNotifyUrl() string {
	if m != nil {
		return m.NotifyUrl
	}
	return ""
}

func (m *CreateRefundRequest) GetItemOrderDetail() []*ItemOrderDetail {
	if m != nil {
		return m.ItemOrderDetail
	}
	return nil
}

func (m *CreateRefundRequest) GetRefundTotalAmount() int64 {
	if m != nil {
		return m.RefundTotalAmount
	}
	return 0
}

type OrderEntrySchema struct {
	// 订单详情页路径，没有前导的/，该字段不能为空，长度 <= 512byte
	Path string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty" form:"path" validate:"required"`
	// 路径参数，自定义的 json 结构，序列化成字符串存入该字段，平台不限制，但是写入的内容需要能够保证生成访问订单详情的 schema 能正确跳转到小程序内部的订单详情页，长度 <= 512byte
	Params               string   `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty" form:"params"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderEntrySchema) Reset()         { *m = OrderEntrySchema{} }
func (m *OrderEntrySchema) String() string { return proto.CompactTextString(m) }
func (*OrderEntrySchema) ProtoMessage()    {}
func (*OrderEntrySchema) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{3}
}
func (m *OrderEntrySchema) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderEntrySchema.Unmarshal(m, b)
}
func (m *OrderEntrySchema) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderEntrySchema.Marshal(b, m, deterministic)
}
func (m *OrderEntrySchema) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderEntrySchema.Merge(m, src)
}
func (m *OrderEntrySchema) XXX_Size() int {
	return xxx_messageInfo_OrderEntrySchema.Size(m)
}
func (m *OrderEntrySchema) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderEntrySchema.DiscardUnknown(m)
}

var xxx_messageInfo_OrderEntrySchema proto.InternalMessageInfo

func (m *OrderEntrySchema) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *OrderEntrySchema) GetParams() string {
	if m != nil {
		return m.Params
	}
	return ""
}

type CreateREfundResponse struct {
	// 抖音错误码
	ErrNo int64 `protobuf:"varint,1,opt,name=err_no,json=errNo,proto3" json:"err_no,omitempty"`
	// 抖音错误信息
	ErrTips              string                     `protobuf:"bytes,2,opt,name=err_tips,json=errTips,proto3" json:"err_tips,omitempty"`
	RespExtra            *CreateREfundResponse_Resp `protobuf:"bytes,3,opt,name=resp_extra,json=respExtra,proto3" json:"resp_extra,omitempty"`
	Data                 *CreateREfundData          `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CreateREfundResponse) Reset()         { *m = CreateREfundResponse{} }
func (m *CreateREfundResponse) String() string { return proto.CompactTextString(m) }
func (*CreateREfundResponse) ProtoMessage()    {}
func (*CreateREfundResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{4}
}
func (m *CreateREfundResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateREfundResponse.Unmarshal(m, b)
}
func (m *CreateREfundResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateREfundResponse.Marshal(b, m, deterministic)
}
func (m *CreateREfundResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateREfundResponse.Merge(m, src)
}
func (m *CreateREfundResponse) XXX_Size() int {
	return xxx_messageInfo_CreateREfundResponse.Size(m)
}
func (m *CreateREfundResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateREfundResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateREfundResponse proto.InternalMessageInfo

func (m *CreateREfundResponse) GetErrNo() int64 {
	if m != nil {
		return m.ErrNo
	}
	return 0
}

func (m *CreateREfundResponse) GetErrTips() string {
	if m != nil {
		return m.ErrTips
	}
	return ""
}

func (m *CreateREfundResponse) GetRespExtra() *CreateREfundResponse_Resp {
	if m != nil {
		return m.RespExtra
	}
	return nil
}

func (m *CreateREfundResponse) GetData() *CreateREfundData {
	if m != nil {
		return m.Data
	}
	return nil
}

// log
type CreateREfundResponse_Resp struct {
	Logid                string   `protobuf:"bytes,1,opt,name=logid,proto3" json:"logid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateREfundResponse_Resp) Reset()         { *m = CreateREfundResponse_Resp{} }
func (m *CreateREfundResponse_Resp) String() string { return proto.CompactTextString(m) }
func (*CreateREfundResponse_Resp) ProtoMessage()    {}
func (*CreateREfundResponse_Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{4, 0}
}
func (m *CreateREfundResponse_Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateREfundResponse_Resp.Unmarshal(m, b)
}
func (m *CreateREfundResponse_Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateREfundResponse_Resp.Marshal(b, m, deterministic)
}
func (m *CreateREfundResponse_Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateREfundResponse_Resp.Merge(m, src)
}
func (m *CreateREfundResponse_Resp) XXX_Size() int {
	return xxx_messageInfo_CreateREfundResponse_Resp.Size(m)
}
func (m *CreateREfundResponse_Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateREfundResponse_Resp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateREfundResponse_Resp proto.InternalMessageInfo

func (m *CreateREfundResponse_Resp) GetLogid() string {
	if m != nil {
		return m.Logid
	}
	return ""
}

type CreateREfundData struct {
	// 抖音开放平台交易系统内部退款单号
	RefundId string `protobuf:"bytes,1,opt,name=refund_id,json=refundId,proto3" json:"refund_id,omitempty"`
	// 退款审核的最后期限，13 位 unix 时间戳，精度：毫秒 通常是3天(从退款发起时间开始算)
	RefundAuditDeadline  int64    `protobuf:"varint,2,opt,name=refund_audit_deadline,json=refundAuditDeadline,proto3" json:"refund_audit_deadline,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateREfundData) Reset()         { *m = CreateREfundData{} }
func (m *CreateREfundData) String() string { return proto.CompactTextString(m) }
func (*CreateREfundData) ProtoMessage()    {}
func (*CreateREfundData) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{5}
}
func (m *CreateREfundData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateREfundData.Unmarshal(m, b)
}
func (m *CreateREfundData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateREfundData.Marshal(b, m, deterministic)
}
func (m *CreateREfundData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateREfundData.Merge(m, src)
}
func (m *CreateREfundData) XXX_Size() int {
	return xxx_messageInfo_CreateREfundData.Size(m)
}
func (m *CreateREfundData) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateREfundData.DiscardUnknown(m)
}

var xxx_messageInfo_CreateREfundData proto.InternalMessageInfo

func (m *CreateREfundData) GetRefundId() string {
	if m != nil {
		return m.RefundId
	}
	return ""
}

func (m *CreateREfundData) GetRefundAuditDeadline() int64 {
	if m != nil {
		return m.RefundAuditDeadline
	}
	return 0
}

type QueryRefundRequest struct {
	// refund_id , out_refund_no , order_id 三选一，不能都不选。
	// order_id维度的不兼容老退款单查询，只支持查询交易系统的退款。查询返回的结果数限制50条
	// 抖音开平内部交易退款单号，长度 <=  64byte
	RefundId string `protobuf:"bytes,1,opt,name=refund_id,json=refundId,proto3" json:"refund_id,omitempty" form:"refund_id"`
	// 开发者系统生成的退款单号，长度 <=  64byte
	OutRefundNo string `protobuf:"bytes,2,opt,name=out_refund_no,json=outRefundNo,proto3" json:"out_refund_no,omitempty" form:"refund_id"`
	// 抖音开平内部交易订单号，  长度 <=  64byte
	OrderId string `protobuf:"bytes,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty" form:"refund_id"`
	// 小程序appid
	Appid                string   `protobuf:"bytes,4,opt,name=appid,proto3" json:"appid,omitempty" form:"appid" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRefundRequest) Reset()         { *m = QueryRefundRequest{} }
func (m *QueryRefundRequest) String() string { return proto.CompactTextString(m) }
func (*QueryRefundRequest) ProtoMessage()    {}
func (*QueryRefundRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{6}
}
func (m *QueryRefundRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRefundRequest.Unmarshal(m, b)
}
func (m *QueryRefundRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRefundRequest.Marshal(b, m, deterministic)
}
func (m *QueryRefundRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRefundRequest.Merge(m, src)
}
func (m *QueryRefundRequest) XXX_Size() int {
	return xxx_messageInfo_QueryRefundRequest.Size(m)
}
func (m *QueryRefundRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRefundRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRefundRequest proto.InternalMessageInfo

func (m *QueryRefundRequest) GetRefundId() string {
	if m != nil {
		return m.RefundId
	}
	return ""
}

func (m *QueryRefundRequest) GetOutRefundNo() string {
	if m != nil {
		return m.OutRefundNo
	}
	return ""
}

func (m *QueryRefundRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *QueryRefundRequest) GetAppid() string {
	if m != nil {
		return m.Appid
	}
	return ""
}

type QueryRefundResponse struct {
	// 抖音错误码
	ErrNo int64 `protobuf:"varint,1,opt,name=err_no,json=errNo,proto3" json:"err_no,omitempty"`
	// 抖音错误信息
	ErrTips              string                    `protobuf:"bytes,2,opt,name=err_tips,json=errTips,proto3" json:"err_tips,omitempty"`
	RespExtra            *QueryRefundResponse_Resp `protobuf:"bytes,3,opt,name=resp_extra,json=respExtra,proto3" json:"resp_extra,omitempty"`
	Data                 *QueryRefundData          `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *QueryRefundResponse) Reset()         { *m = QueryRefundResponse{} }
func (m *QueryRefundResponse) String() string { return proto.CompactTextString(m) }
func (*QueryRefundResponse) ProtoMessage()    {}
func (*QueryRefundResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{7}
}
func (m *QueryRefundResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRefundResponse.Unmarshal(m, b)
}
func (m *QueryRefundResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRefundResponse.Marshal(b, m, deterministic)
}
func (m *QueryRefundResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRefundResponse.Merge(m, src)
}
func (m *QueryRefundResponse) XXX_Size() int {
	return xxx_messageInfo_QueryRefundResponse.Size(m)
}
func (m *QueryRefundResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRefundResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRefundResponse proto.InternalMessageInfo

func (m *QueryRefundResponse) GetErrNo() int64 {
	if m != nil {
		return m.ErrNo
	}
	return 0
}

func (m *QueryRefundResponse) GetErrTips() string {
	if m != nil {
		return m.ErrTips
	}
	return ""
}

func (m *QueryRefundResponse) GetRespExtra() *QueryRefundResponse_Resp {
	if m != nil {
		return m.RespExtra
	}
	return nil
}

func (m *QueryRefundResponse) GetData() *QueryRefundData {
	if m != nil {
		return m.Data
	}
	return nil
}

// log
type QueryRefundResponse_Resp struct {
	Logid                string   `protobuf:"bytes,1,opt,name=logid,proto3" json:"logid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryRefundResponse_Resp) Reset()         { *m = QueryRefundResponse_Resp{} }
func (m *QueryRefundResponse_Resp) String() string { return proto.CompactTextString(m) }
func (*QueryRefundResponse_Resp) ProtoMessage()    {}
func (*QueryRefundResponse_Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{7, 0}
}
func (m *QueryRefundResponse_Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRefundResponse_Resp.Unmarshal(m, b)
}
func (m *QueryRefundResponse_Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRefundResponse_Resp.Marshal(b, m, deterministic)
}
func (m *QueryRefundResponse_Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRefundResponse_Resp.Merge(m, src)
}
func (m *QueryRefundResponse_Resp) XXX_Size() int {
	return xxx_messageInfo_QueryRefundResponse_Resp.Size(m)
}
func (m *QueryRefundResponse_Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRefundResponse_Resp.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRefundResponse_Resp proto.InternalMessageInfo

func (m *QueryRefundResponse_Resp) GetLogid() string {
	if m != nil {
		return m.Logid
	}
	return ""
}

type QueryRefundData struct {
	RefundList           []*RefundList `protobuf:"bytes,1,rep,name=refund_list,json=refundList,proto3" json:"refund_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *QueryRefundData) Reset()         { *m = QueryRefundData{} }
func (m *QueryRefundData) String() string { return proto.CompactTextString(m) }
func (*QueryRefundData) ProtoMessage()    {}
func (*QueryRefundData) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{8}
}
func (m *QueryRefundData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryRefundData.Unmarshal(m, b)
}
func (m *QueryRefundData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryRefundData.Marshal(b, m, deterministic)
}
func (m *QueryRefundData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryRefundData.Merge(m, src)
}
func (m *QueryRefundData) XXX_Size() int {
	return xxx_messageInfo_QueryRefundData.Size(m)
}
func (m *QueryRefundData) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryRefundData.DiscardUnknown(m)
}

var xxx_messageInfo_QueryRefundData proto.InternalMessageInfo

func (m *QueryRefundData) GetRefundList() []*RefundList {
	if m != nil {
		return m.RefundList
	}
	return nil
}

type RefundList struct {
	// 系统退款单号，开放平台生成的退款单号
	RefundId string `protobuf:"bytes,1,opt,name=refund_id,json=refundId,proto3" json:"refund_id,omitempty"`
	// 开发者系统生成的退款单号，与抖音开平退款单号 refund_id 唯一关联
	OutRefundNo string `protobuf:"bytes,2,opt,name=out_refund_no,json=outRefundNo,proto3" json:"out_refund_no,omitempty"`
	// 退款金额，单位[分]
	RefundTotalAmount int64 `protobuf:"varint,3,opt,name=refund_total_amount,json=refundTotalAmount,proto3" json:"refund_total_amount,omitempty"`
	// 退款状态 退款中- PROCESSING 已退款- SUCCESS 退款失败- FAIL
	RefundStatus string `protobuf:"bytes,4,opt,name=refund_status,json=refundStatus,proto3" json:"refund_status,omitempty"`
	// 退款时间，13 位毫秒时间戳，只有已退款才有退款时间
	RefundAt int64 `protobuf:"varint,5,opt,name=refund_at,json=refundAt,proto3" json:"refund_at,omitempty"`
	// 退款结果信息，非商家拒绝退款导致的退款失败，可以通过该字段了解退款失败原因
	Message string `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	// 系统订单信息，开放平台生成的订单号
	OrderId string `protobuf:"bytes,7,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// 商品单信息 (交易系统订单退款才有的信息)
	ItemOrderDetail []*ItemOrderDetail `protobuf:"bytes,8,rep,name=item_order_detail,json=itemOrderDetail,proto3" json:"item_order_detail,omitempty"`
	// 退款审核信息 (交易系统订单退款才有的信息)
	MerchantAuditDetail *MerchantAuditDetail `protobuf:"bytes,9,opt,name=merchant_audit_detail,json=merchantAuditDetail,proto3" json:"merchant_audit_detail,omitempty"`
	// 退款创建时间，13 位毫秒时间戳
	CreateAt int64 `protobuf:"varint,10,opt,name=create_at,json=createAt,proto3" json:"create_at,omitempty"`
	// 退款来源，仅交易2.0退款有来源，老的担保交易/1.0订单可能没有记录来源
	// 1: 用户发起退款
	// 2: 开放者发起退款
	// 3: 自动退款
	// 4: 抖音客服退款
	// 5: 预约失败自动发起退款
	// 6: 开发者拒绝接单退款
	// 7: 后约单触发先买单退款
	RefundSource         int64    `protobuf:"varint,11,opt,name=refund_source,json=refundSource,proto3" json:"refund_source,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefundList) Reset()         { *m = RefundList{} }
func (m *RefundList) String() string { return proto.CompactTextString(m) }
func (*RefundList) ProtoMessage()    {}
func (*RefundList) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{9}
}
func (m *RefundList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefundList.Unmarshal(m, b)
}
func (m *RefundList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefundList.Marshal(b, m, deterministic)
}
func (m *RefundList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefundList.Merge(m, src)
}
func (m *RefundList) XXX_Size() int {
	return xxx_messageInfo_RefundList.Size(m)
}
func (m *RefundList) XXX_DiscardUnknown() {
	xxx_messageInfo_RefundList.DiscardUnknown(m)
}

var xxx_messageInfo_RefundList proto.InternalMessageInfo

func (m *RefundList) GetRefundId() string {
	if m != nil {
		return m.RefundId
	}
	return ""
}

func (m *RefundList) GetOutRefundNo() string {
	if m != nil {
		return m.OutRefundNo
	}
	return ""
}

func (m *RefundList) GetRefundTotalAmount() int64 {
	if m != nil {
		return m.RefundTotalAmount
	}
	return 0
}

func (m *RefundList) GetRefundStatus() string {
	if m != nil {
		return m.RefundStatus
	}
	return ""
}

func (m *RefundList) GetRefundAt() int64 {
	if m != nil {
		return m.RefundAt
	}
	return 0
}

func (m *RefundList) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *RefundList) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *RefundList) GetItemOrderDetail() []*ItemOrderDetail {
	if m != nil {
		return m.ItemOrderDetail
	}
	return nil
}

func (m *RefundList) GetMerchantAuditDetail() *MerchantAuditDetail {
	if m != nil {
		return m.MerchantAuditDetail
	}
	return nil
}

func (m *RefundList) GetCreateAt() int64 {
	if m != nil {
		return m.CreateAt
	}
	return 0
}

func (m *RefundList) GetRefundSource() int64 {
	if m != nil {
		return m.RefundSource
	}
	return 0
}

type MerchantAuditDetail struct {
	// 退款审核的最后期限，过期无需审核，自动退款，13 位 unix 时间戳，精度：毫秒
	RefundAuditDeadline int64 `protobuf:"varint,1,opt,name=refund_audit_deadline,json=refundAuditDeadline,proto3" json:"refund_audit_deadline,omitempty"`
	// 退款审核状态：
	// INIT：初始化
	// TOAUDIT：待审核
	// AGREE：同意
	// DENY：拒绝
	// OVERTIME：超时未审核自动同意
	AuditStatus string `protobuf:"bytes,2,opt,name=audit_status,json=auditStatus,proto3" json:"audit_status,omitempty"`
	// 不同意退款信息，长度 <= 512 byte
	DenyMessage          string   `protobuf:"bytes,3,opt,name=deny_message,json=denyMessage,proto3" json:"deny_message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MerchantAuditDetail) Reset()         { *m = MerchantAuditDetail{} }
func (m *MerchantAuditDetail) String() string { return proto.CompactTextString(m) }
func (*MerchantAuditDetail) ProtoMessage()    {}
func (*MerchantAuditDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{10}
}
func (m *MerchantAuditDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MerchantAuditDetail.Unmarshal(m, b)
}
func (m *MerchantAuditDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MerchantAuditDetail.Marshal(b, m, deterministic)
}
func (m *MerchantAuditDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MerchantAuditDetail.Merge(m, src)
}
func (m *MerchantAuditDetail) XXX_Size() int {
	return xxx_messageInfo_MerchantAuditDetail.Size(m)
}
func (m *MerchantAuditDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_MerchantAuditDetail.DiscardUnknown(m)
}

var xxx_messageInfo_MerchantAuditDetail proto.InternalMessageInfo

func (m *MerchantAuditDetail) GetRefundAuditDeadline() int64 {
	if m != nil {
		return m.RefundAuditDeadline
	}
	return 0
}

func (m *MerchantAuditDetail) GetAuditStatus() string {
	if m != nil {
		return m.AuditStatus
	}
	return ""
}

func (m *MerchantAuditDetail) GetDenyMessage() string {
	if m != nil {
		return m.DenyMessage
	}
	return ""
}

type ItemOrderDetail struct {
	// 抖音开平侧的商品单号
	ItemOrderId string `protobuf:"bytes,1,opt,name=item_order_id,json=itemOrderId,proto3" json:"item_order_id,omitempty"`
	// 该商品单退款金额，单位[分]
	RefundAmount         int64    `protobuf:"varint,2,opt,name=refund_amount,json=refundAmount,proto3" json:"refund_amount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ItemOrderDetail) Reset()         { *m = ItemOrderDetail{} }
func (m *ItemOrderDetail) String() string { return proto.CompactTextString(m) }
func (*ItemOrderDetail) ProtoMessage()    {}
func (*ItemOrderDetail) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{11}
}
func (m *ItemOrderDetail) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ItemOrderDetail.Unmarshal(m, b)
}
func (m *ItemOrderDetail) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ItemOrderDetail.Marshal(b, m, deterministic)
}
func (m *ItemOrderDetail) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ItemOrderDetail.Merge(m, src)
}
func (m *ItemOrderDetail) XXX_Size() int {
	return xxx_messageInfo_ItemOrderDetail.Size(m)
}
func (m *ItemOrderDetail) XXX_DiscardUnknown() {
	xxx_messageInfo_ItemOrderDetail.DiscardUnknown(m)
}

var xxx_messageInfo_ItemOrderDetail proto.InternalMessageInfo

func (m *ItemOrderDetail) GetItemOrderId() string {
	if m != nil {
		return m.ItemOrderId
	}
	return ""
}

func (m *ItemOrderDetail) GetRefundAmount() int64 {
	if m != nil {
		return m.RefundAmount
	}
	return 0
}

type QuerySettleRequest struct {
	// 以上 4 个参数选填一个，查询优先级：settle_id > order_id > out_settle_no > out_order_no。例如：请求填写了settle_id 和 order_id，服务只会按 settle_id 来查询，忽略 order_id 。如果未查询到结果，会返回空数组。
	// 注意：对于担保交易订单，如果需要根据 order_id/out_order_no 查询订单的分账记录，建议使用 order_id（抖音开平侧支付单 id 查询），若使用 out_order_no 可能存在查询不到的情况。
	// 开发者侧订单 id，长度 <= 64 字节
	OutOrderNo string `protobuf:"bytes,1,opt,name=out_order_no,json=outOrderNo,proto3" json:"out_order_no,omitempty" form:"out_order_no"`
	// 开发者侧分账单 id，长度 <= 64字节
	OutSettleNo string `protobuf:"bytes,2,opt,name=out_settle_no,json=outSettleNo,proto3" json:"out_settle_no,omitempty" form:"out_settle_no"`
	// 抖音开平侧订单 id，长度 <= 64字节
	OrderId string `protobuf:"bytes,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty" form:"order_id"`
	// 抖音开平侧分账单 id，长度 <= 64字节
	SettleId string `protobuf:"bytes,4,opt,name=settle_id,json=settleId,proto3" json:"settle_id,omitempty" form:"settle_id"`
	// 小程序appid
	Appid                string   `protobuf:"bytes,5,opt,name=appid,proto3" json:"appid,omitempty" form:"appid" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuerySettleRequest) Reset()         { *m = QuerySettleRequest{} }
func (m *QuerySettleRequest) String() string { return proto.CompactTextString(m) }
func (*QuerySettleRequest) ProtoMessage()    {}
func (*QuerySettleRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{12}
}
func (m *QuerySettleRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuerySettleRequest.Unmarshal(m, b)
}
func (m *QuerySettleRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuerySettleRequest.Marshal(b, m, deterministic)
}
func (m *QuerySettleRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySettleRequest.Merge(m, src)
}
func (m *QuerySettleRequest) XXX_Size() int {
	return xxx_messageInfo_QuerySettleRequest.Size(m)
}
func (m *QuerySettleRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySettleRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySettleRequest proto.InternalMessageInfo

func (m *QuerySettleRequest) GetOutOrderNo() string {
	if m != nil {
		return m.OutOrderNo
	}
	return ""
}

func (m *QuerySettleRequest) GetOutSettleNo() string {
	if m != nil {
		return m.OutSettleNo
	}
	return ""
}

func (m *QuerySettleRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *QuerySettleRequest) GetSettleId() string {
	if m != nil {
		return m.SettleId
	}
	return ""
}

func (m *QuerySettleRequest) GetAppid() string {
	if m != nil {
		return m.Appid
	}
	return ""
}

type QuerySettleResponse struct {
	// 抖音错误码
	ErrNo int64 `protobuf:"varint,1,opt,name=err_no,json=errNo,proto3" json:"err_no,omitempty"`
	// 抖音错误信息
	ErrTips              string                    `protobuf:"bytes,2,opt,name=err_tips,json=errTips,proto3" json:"err_tips,omitempty"`
	RespExtra            *QuerySettleResponse_Resp `protobuf:"bytes,3,opt,name=resp_extra,json=respExtra,proto3" json:"resp_extra,omitempty"`
	Data                 *QuerySettleData          `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *QuerySettleResponse) Reset()         { *m = QuerySettleResponse{} }
func (m *QuerySettleResponse) String() string { return proto.CompactTextString(m) }
func (*QuerySettleResponse) ProtoMessage()    {}
func (*QuerySettleResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{13}
}
func (m *QuerySettleResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuerySettleResponse.Unmarshal(m, b)
}
func (m *QuerySettleResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuerySettleResponse.Marshal(b, m, deterministic)
}
func (m *QuerySettleResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySettleResponse.Merge(m, src)
}
func (m *QuerySettleResponse) XXX_Size() int {
	return xxx_messageInfo_QuerySettleResponse.Size(m)
}
func (m *QuerySettleResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySettleResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySettleResponse proto.InternalMessageInfo

func (m *QuerySettleResponse) GetErrNo() int64 {
	if m != nil {
		return m.ErrNo
	}
	return 0
}

func (m *QuerySettleResponse) GetErrTips() string {
	if m != nil {
		return m.ErrTips
	}
	return ""
}

func (m *QuerySettleResponse) GetRespExtra() *QuerySettleResponse_Resp {
	if m != nil {
		return m.RespExtra
	}
	return nil
}

func (m *QuerySettleResponse) GetData() *QuerySettleData {
	if m != nil {
		return m.Data
	}
	return nil
}

// log
type QuerySettleResponse_Resp struct {
	Logid                string   `protobuf:"bytes,1,opt,name=logid,proto3" json:"logid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuerySettleResponse_Resp) Reset()         { *m = QuerySettleResponse_Resp{} }
func (m *QuerySettleResponse_Resp) String() string { return proto.CompactTextString(m) }
func (*QuerySettleResponse_Resp) ProtoMessage()    {}
func (*QuerySettleResponse_Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{13, 0}
}
func (m *QuerySettleResponse_Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuerySettleResponse_Resp.Unmarshal(m, b)
}
func (m *QuerySettleResponse_Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuerySettleResponse_Resp.Marshal(b, m, deterministic)
}
func (m *QuerySettleResponse_Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySettleResponse_Resp.Merge(m, src)
}
func (m *QuerySettleResponse_Resp) XXX_Size() int {
	return xxx_messageInfo_QuerySettleResponse_Resp.Size(m)
}
func (m *QuerySettleResponse_Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySettleResponse_Resp.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySettleResponse_Resp proto.InternalMessageInfo

func (m *QuerySettleResponse_Resp) GetLogid() string {
	if m != nil {
		return m.Logid
	}
	return ""
}

type QuerySettleData struct {
	// 开发者侧交易订单 id，长度 <= 64 字节，由数字、ASCII 字符组成
	OutOrderNo string `protobuf:"bytes,1,opt,name=out_order_no,json=outOrderNo,proto3" json:"out_order_no,omitempty"`
	// 开发者侧分账单 id，长度 <= 64字节，由数字、ASCII 字符组成
	OutSettleNo string `protobuf:"bytes,2,opt,name=out_settle_no,json=outSettleNo,proto3" json:"out_settle_no,omitempty"`
	// 抖音开平侧交易订单 id，长度 <= 64 字节，由数字、ASCII 字符组成
	OrderId string `protobuf:"bytes,3,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// 抖音开平侧分账单id，长度 <= 64 字节，由数字、ASCII 字符组成
	SettleId string `protobuf:"bytes,4,opt,name=settle_id,json=settleId,proto3" json:"settle_id,omitempty"`
	// 抖音开平侧item单 id，长度 <= 64 字节，由数字、ASCII 字符组成，按券分账时该字段不为空
	ItemOrderId string `protobuf:"bytes,5,opt,name=item_order_id,json=itemOrderId,proto3" json:"item_order_id,omitempty"`
	// 分账金额，单位分
	SettleAmount int64 `protobuf:"varint,6,opt,name=settle_amount,json=settleAmount,proto3" json:"settle_amount,omitempty"`
	// 分账状态：INIT：初始化 PROCESSING：处理中 SUCCESS：处理成功 FAIL：处理失败
	SettleStatus string `protobuf:"bytes,7,opt,name=settle_status,json=settleStatus,proto3" json:"settle_status,omitempty"`
	// 分账详情
	SettleDetail string `protobuf:"bytes,8,opt,name=settle_detail,json=settleDetail,proto3" json:"settle_detail,omitempty"`
	// 分账时间，13 位时间戳，单位毫秒
	SettleTime int64 `protobuf:"varint,9,opt,name=settle_time,json=settleTime,proto3" json:"settle_time,omitempty"`
	// 手续费，单位分
	Rake int64 `protobuf:"varint,10,opt,name=rake,proto3" json:"rake,omitempty"`
	// 佣金，单位分
	Commission int64 `protobuf:"varint,11,opt,name=commission,proto3" json:"commission,omitempty"`
	// 开发者自定义透传字段，长度 <= 2048 字节，不支持二进制数据
	CpExtra string `protobuf:"bytes,12,opt,name=cp_extra,json=cpExtra,proto3" json:"cp_extra,omitempty"`
	// 用于退分账场景，对应退分账接口文档中settle_no，长度<= 64字节
	InnerSettleId        string   `protobuf:"bytes,13,opt,name=inner_settle_id,json=innerSettleId,proto3" json:"inner_settle_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuerySettleData) Reset()         { *m = QuerySettleData{} }
func (m *QuerySettleData) String() string { return proto.CompactTextString(m) }
func (*QuerySettleData) ProtoMessage()    {}
func (*QuerySettleData) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{14}
}
func (m *QuerySettleData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuerySettleData.Unmarshal(m, b)
}
func (m *QuerySettleData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuerySettleData.Marshal(b, m, deterministic)
}
func (m *QuerySettleData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuerySettleData.Merge(m, src)
}
func (m *QuerySettleData) XXX_Size() int {
	return xxx_messageInfo_QuerySettleData.Size(m)
}
func (m *QuerySettleData) XXX_DiscardUnknown() {
	xxx_messageInfo_QuerySettleData.DiscardUnknown(m)
}

var xxx_messageInfo_QuerySettleData proto.InternalMessageInfo

func (m *QuerySettleData) GetOutOrderNo() string {
	if m != nil {
		return m.OutOrderNo
	}
	return ""
}

func (m *QuerySettleData) GetOutSettleNo() string {
	if m != nil {
		return m.OutSettleNo
	}
	return ""
}

func (m *QuerySettleData) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *QuerySettleData) GetSettleId() string {
	if m != nil {
		return m.SettleId
	}
	return ""
}

func (m *QuerySettleData) GetItemOrderId() string {
	if m != nil {
		return m.ItemOrderId
	}
	return ""
}

func (m *QuerySettleData) GetSettleAmount() int64 {
	if m != nil {
		return m.SettleAmount
	}
	return 0
}

func (m *QuerySettleData) GetSettleStatus() string {
	if m != nil {
		return m.SettleStatus
	}
	return ""
}

func (m *QuerySettleData) GetSettleDetail() string {
	if m != nil {
		return m.SettleDetail
	}
	return ""
}

func (m *QuerySettleData) GetSettleTime() int64 {
	if m != nil {
		return m.SettleTime
	}
	return 0
}

func (m *QuerySettleData) GetRake() int64 {
	if m != nil {
		return m.Rake
	}
	return 0
}

func (m *QuerySettleData) GetCommission() int64 {
	if m != nil {
		return m.Commission
	}
	return 0
}

func (m *QuerySettleData) GetCpExtra() string {
	if m != nil {
		return m.CpExtra
	}
	return ""
}

func (m *QuerySettleData) GetInnerSettleId() string {
	if m != nil {
		return m.InnerSettleId
	}
	return ""
}

type QueryOrderRequest struct {
	// order_id 与 out_order_no 二选一 抖音开平内部交易订单号，该单号通过预下单回调传给开发者服务，长度 < 64byte。
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty" form:"order_id"`
	// 开发者系统生成的订单号，与唯一 order_id 关联，长度 < 64byte
	OutOrderNo string `protobuf:"bytes,2,opt,name=out_order_no,json=outOrderNo,proto3" json:"out_order_no,omitempty" form:"out_order_no"`
	// 小程序appid
	Appid                string   `protobuf:"bytes,3,opt,name=appid,proto3" json:"appid,omitempty" form:"appid" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryOrderRequest) Reset()         { *m = QueryOrderRequest{} }
func (m *QueryOrderRequest) String() string { return proto.CompactTextString(m) }
func (*QueryOrderRequest) ProtoMessage()    {}
func (*QueryOrderRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{15}
}
func (m *QueryOrderRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryOrderRequest.Unmarshal(m, b)
}
func (m *QueryOrderRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryOrderRequest.Marshal(b, m, deterministic)
}
func (m *QueryOrderRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryOrderRequest.Merge(m, src)
}
func (m *QueryOrderRequest) XXX_Size() int {
	return xxx_messageInfo_QueryOrderRequest.Size(m)
}
func (m *QueryOrderRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryOrderRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryOrderRequest proto.InternalMessageInfo

func (m *QueryOrderRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *QueryOrderRequest) GetOutOrderNo() string {
	if m != nil {
		return m.OutOrderNo
	}
	return ""
}

func (m *QueryOrderRequest) GetAppid() string {
	if m != nil {
		return m.Appid
	}
	return ""
}

type QueryOrderResponse struct {
	// 抖音错误码
	ErrNo int64 `protobuf:"varint,1,opt,name=err_no,json=errNo,proto3" json:"err_no,omitempty"`
	// 抖音错误信息
	ErrTips              string                   `protobuf:"bytes,2,opt,name=err_tips,json=errTips,proto3" json:"err_tips,omitempty"`
	RespExtra            *QueryOrderResponse_Resp `protobuf:"bytes,3,opt,name=resp_extra,json=respExtra,proto3" json:"resp_extra,omitempty"`
	Data                 *QuqeyOrderData          `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *QueryOrderResponse) Reset()         { *m = QueryOrderResponse{} }
func (m *QueryOrderResponse) String() string { return proto.CompactTextString(m) }
func (*QueryOrderResponse) ProtoMessage()    {}
func (*QueryOrderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{16}
}
func (m *QueryOrderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryOrderResponse.Unmarshal(m, b)
}
func (m *QueryOrderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryOrderResponse.Marshal(b, m, deterministic)
}
func (m *QueryOrderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryOrderResponse.Merge(m, src)
}
func (m *QueryOrderResponse) XXX_Size() int {
	return xxx_messageInfo_QueryOrderResponse.Size(m)
}
func (m *QueryOrderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryOrderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryOrderResponse proto.InternalMessageInfo

func (m *QueryOrderResponse) GetErrNo() int64 {
	if m != nil {
		return m.ErrNo
	}
	return 0
}

func (m *QueryOrderResponse) GetErrTips() string {
	if m != nil {
		return m.ErrTips
	}
	return ""
}

func (m *QueryOrderResponse) GetRespExtra() *QueryOrderResponse_Resp {
	if m != nil {
		return m.RespExtra
	}
	return nil
}

func (m *QueryOrderResponse) GetData() *QuqeyOrderData {
	if m != nil {
		return m.Data
	}
	return nil
}

// log
type QueryOrderResponse_Resp struct {
	Logid                string   `protobuf:"bytes,1,opt,name=logid,proto3" json:"logid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryOrderResponse_Resp) Reset()         { *m = QueryOrderResponse_Resp{} }
func (m *QueryOrderResponse_Resp) String() string { return proto.CompactTextString(m) }
func (*QueryOrderResponse_Resp) ProtoMessage()    {}
func (*QueryOrderResponse_Resp) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{16, 0}
}
func (m *QueryOrderResponse_Resp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryOrderResponse_Resp.Unmarshal(m, b)
}
func (m *QueryOrderResponse_Resp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryOrderResponse_Resp.Marshal(b, m, deterministic)
}
func (m *QueryOrderResponse_Resp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryOrderResponse_Resp.Merge(m, src)
}
func (m *QueryOrderResponse_Resp) XXX_Size() int {
	return xxx_messageInfo_QueryOrderResponse_Resp.Size(m)
}
func (m *QueryOrderResponse_Resp) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryOrderResponse_Resp.DiscardUnknown(m)
}

var xxx_messageInfo_QueryOrderResponse_Resp proto.InternalMessageInfo

func (m *QueryOrderResponse_Resp) GetLogid() string {
	if m != nil {
		return m.Logid
	}
	return ""
}

type QuqeyOrderData struct {
	// 抖音开平侧订单号
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// 开发者侧订单号，与 order_id 一一对应
	OutOrderNo string `protobuf:"bytes,2,opt,name=out_order_no,json=outOrderNo,proto3" json:"out_order_no,omitempty"`
	// 已退款金额，单位分
	RefundAmount int64 `protobuf:"varint,3,opt,name=refund_amount,json=refundAmount,proto3" json:"refund_amount,omitempty"`
	// 已分账金额，单位分
	SettleAmount int64 `protobuf:"varint,4,opt,name=settle_amount,json=settleAmount,proto3" json:"settle_amount,omitempty"`
	// 订单实际支付金额，单位[分]
	TotalFee int64 `protobuf:"varint,5,opt,name=total_fee,json=totalFee,proto3" json:"total_fee,omitempty"`
	// 订单状态， INIT： 初始状态 PROCESS： 订单处理中 SUCCESS：成功 FAIL：失败 TIMEOUT：用户超时未支付
	OrderStatus string `protobuf:"bytes,6,opt,name=order_status,json=orderStatus,proto3" json:"order_status,omitempty"`
	// 支付时间，格式：2021-12-12 00:00:00
	PayTime string `protobuf:"bytes,7,opt,name=pay_time,json=payTime,proto3" json:"pay_time,omitempty"`
	// 支付渠道枚举 1：微信， 2：支付宝 10：抖音支付
	PayChannel int64 `protobuf:"varint,8,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel,omitempty"`
	// 渠道支付单号，如微信的支付单号
	ChannelPayId string `protobuf:"bytes,9,opt,name=channel_pay_id,json=channelPayId,proto3" json:"channel_pay_id,omitempty"`
	// 卖家商户号 id
	SellerUid string `protobuf:"bytes,10,opt,name=seller_uid,json=sellerUid,proto3" json:"seller_uid,omitempty"`
	// 视频id
	ItemId string `protobuf:"bytes,11,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// 预下单时开发者定义的透传信息
	CpExtra string `protobuf:"bytes,12,opt,name=cp_extra,json=cpExtra,proto3" json:"cp_extra,omitempty"`
	// 结果描述信息，如失败原因
	Message string `protobuf:"bytes,13,opt,name=message,proto3" json:"message,omitempty"`
	// 担保支付单 id
	PaymentOrderId string `protobuf:"bytes,14,opt,name=payment_order_id,json=paymentOrderId,proto3" json:"payment_order_id,omitempty"`
	// 订单核销类型：
	// 0: 非闭环核销，开发者自行处理券码生成及展示，通过 push_delivery 接口推送核销状态。
	// 1: 闭环核销，开平负责生券，开发者使用核销组件展示，使用验券准备和验券接口核销。
	DeliveryType         int64    `protobuf:"varint,15,opt,name=delivery_type,json=deliveryType,proto3" json:"delivery_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuqeyOrderData) Reset()         { *m = QuqeyOrderData{} }
func (m *QuqeyOrderData) String() string { return proto.CompactTextString(m) }
func (*QuqeyOrderData) ProtoMessage()    {}
func (*QuqeyOrderData) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{17}
}
func (m *QuqeyOrderData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuqeyOrderData.Unmarshal(m, b)
}
func (m *QuqeyOrderData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuqeyOrderData.Marshal(b, m, deterministic)
}
func (m *QuqeyOrderData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuqeyOrderData.Merge(m, src)
}
func (m *QuqeyOrderData) XXX_Size() int {
	return xxx_messageInfo_QuqeyOrderData.Size(m)
}
func (m *QuqeyOrderData) XXX_DiscardUnknown() {
	xxx_messageInfo_QuqeyOrderData.DiscardUnknown(m)
}

var xxx_messageInfo_QuqeyOrderData proto.InternalMessageInfo

func (m *QuqeyOrderData) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *QuqeyOrderData) GetOutOrderNo() string {
	if m != nil {
		return m.OutOrderNo
	}
	return ""
}

func (m *QuqeyOrderData) GetRefundAmount() int64 {
	if m != nil {
		return m.RefundAmount
	}
	return 0
}

func (m *QuqeyOrderData) GetSettleAmount() int64 {
	if m != nil {
		return m.SettleAmount
	}
	return 0
}

func (m *QuqeyOrderData) GetTotalFee() int64 {
	if m != nil {
		return m.TotalFee
	}
	return 0
}

func (m *QuqeyOrderData) GetOrderStatus() string {
	if m != nil {
		return m.OrderStatus
	}
	return ""
}

func (m *QuqeyOrderData) GetPayTime() string {
	if m != nil {
		return m.PayTime
	}
	return ""
}

func (m *QuqeyOrderData) GetPayChannel() int64 {
	if m != nil {
		return m.PayChannel
	}
	return 0
}

func (m *QuqeyOrderData) GetChannelPayId() string {
	if m != nil {
		return m.ChannelPayId
	}
	return ""
}

func (m *QuqeyOrderData) GetSellerUid() string {
	if m != nil {
		return m.SellerUid
	}
	return ""
}

func (m *QuqeyOrderData) GetItemId() string {
	if m != nil {
		return m.ItemId
	}
	return ""
}

func (m *QuqeyOrderData) GetCpExtra() string {
	if m != nil {
		return m.CpExtra
	}
	return ""
}

func (m *QuqeyOrderData) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *QuqeyOrderData) GetPaymentOrderId() string {
	if m != nil {
		return m.PaymentOrderId
	}
	return ""
}

func (m *QuqeyOrderData) GetDeliveryType() int64 {
	if m != nil {
		return m.DeliveryType
	}
	return 0
}

type QueryCpsRequest struct {
	// order_id 与 out_order_no 二选一 抖音开平内部交易订单号，该单号通过预下单回调传给开发者服务，长度 < 64byte。
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty" form:"order_id"`
	// 开发者系统生成的订单号，与唯一 order_id 关联，长度 < 64byte
	OutOrderNo string `protobuf:"bytes,2,opt,name=out_order_no,json=outOrderNo,proto3" json:"out_order_no,omitempty" form:"out_order_no"`
	// 小程序appid
	Appid                string   `protobuf:"bytes,3,opt,name=appid,proto3" json:"appid,omitempty" form:"appid" validate:"required"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryCpsRequest) Reset()         { *m = QueryCpsRequest{} }
func (m *QueryCpsRequest) String() string { return proto.CompactTextString(m) }
func (*QueryCpsRequest) ProtoMessage()    {}
func (*QueryCpsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{18}
}
func (m *QueryCpsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryCpsRequest.Unmarshal(m, b)
}
func (m *QueryCpsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryCpsRequest.Marshal(b, m, deterministic)
}
func (m *QueryCpsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryCpsRequest.Merge(m, src)
}
func (m *QueryCpsRequest) XXX_Size() int {
	return xxx_messageInfo_QueryCpsRequest.Size(m)
}
func (m *QueryCpsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryCpsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_QueryCpsRequest proto.InternalMessageInfo

func (m *QueryCpsRequest) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *QueryCpsRequest) GetOutOrderNo() string {
	if m != nil {
		return m.OutOrderNo
	}
	return ""
}

func (m *QueryCpsRequest) GetAppid() string {
	if m != nil {
		return m.Appid
	}
	return ""
}

type QueryCpsResponse struct {
	// 抖音错误码
	ErrNo int64 `protobuf:"varint,1,opt,name=err_no,json=errNo,proto3" json:"err_no,omitempty"`
	// 抖音错误信息
	ErrTips   string                `protobuf:"bytes,2,opt,name=err_tips,json=errTips,proto3" json:"err_tips,omitempty"`
	RespExtra *QueryCpsResponseResp `protobuf:"bytes,3,opt,name=resp_extra,json=respExtra,proto3" json:"resp_extra,omitempty"`
	// CPS 订单相关信息
	Data                 *Data    `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryCpsResponse) Reset()         { *m = QueryCpsResponse{} }
func (m *QueryCpsResponse) String() string { return proto.CompactTextString(m) }
func (*QueryCpsResponse) ProtoMessage()    {}
func (*QueryCpsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{19}
}
func (m *QueryCpsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryCpsResponse.Unmarshal(m, b)
}
func (m *QueryCpsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryCpsResponse.Marshal(b, m, deterministic)
}
func (m *QueryCpsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryCpsResponse.Merge(m, src)
}
func (m *QueryCpsResponse) XXX_Size() int {
	return xxx_messageInfo_QueryCpsResponse.Size(m)
}
func (m *QueryCpsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryCpsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_QueryCpsResponse proto.InternalMessageInfo

func (m *QueryCpsResponse) GetErrNo() int64 {
	if m != nil {
		return m.ErrNo
	}
	return 0
}

func (m *QueryCpsResponse) GetErrTips() string {
	if m != nil {
		return m.ErrTips
	}
	return ""
}

func (m *QueryCpsResponse) GetRespExtra() *QueryCpsResponseResp {
	if m != nil {
		return m.RespExtra
	}
	return nil
}

func (m *QueryCpsResponse) GetData() *Data {
	if m != nil {
		return m.Data
	}
	return nil
}

// log
type QueryCpsResponseResp struct {
	Logid                string   `protobuf:"bytes,1,opt,name=logid,proto3" json:"logid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueryCpsResponseResp) Reset()         { *m = QueryCpsResponseResp{} }
func (m *QueryCpsResponseResp) String() string { return proto.CompactTextString(m) }
func (*QueryCpsResponseResp) ProtoMessage()    {}
func (*QueryCpsResponseResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{19, 0}
}
func (m *QueryCpsResponseResp) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueryCpsResponseResp.Unmarshal(m, b)
}
func (m *QueryCpsResponseResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueryCpsResponseResp.Marshal(b, m, deterministic)
}
func (m *QueryCpsResponseResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueryCpsResponseResp.Merge(m, src)
}
func (m *QueryCpsResponseResp) XXX_Size() int {
	return xxx_messageInfo_QueryCpsResponseResp.Size(m)
}
func (m *QueryCpsResponseResp) XXX_DiscardUnknown() {
	xxx_messageInfo_QueryCpsResponseResp.DiscardUnknown(m)
}

var xxx_messageInfo_QueryCpsResponseResp proto.InternalMessageInfo

func (m *QueryCpsResponseResp) GetLogid() string {
	if m != nil {
		return m.Logid
	}
	return ""
}

type Data struct {
	// 抖音开平侧订单号
	OrderId string `protobuf:"bytes,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	// 开发者侧订单号，与 order_id一一对应
	OutOrderNo string `protobuf:"bytes,2,opt,name=out_order_no,json=outOrderNo,proto3" json:"out_order_no,omitempty"`
	// CPS 订单支付相关信息
	PaymentInfo *PaymentInfo `protobuf:"bytes,3,opt,name=payment_info,json=paymentInfo,proto3" json:"payment_info,omitempty"`
	// CPS 相关信息
	CpsInfo *CpsInfo `protobuf:"bytes,4,opt,name=cps_info,json=cpsInfo,proto3" json:"cps_info,omitempty"`
	// CPS 订单已退款记录信息
	RefundInfo string `protobuf:"bytes,5,opt,name=refund_info,json=refundInfo,proto3" json:"refund_info,omitempty"`
	// CPS 订单已核销记录信息
	DeliveryInfo         string   `protobuf:"bytes,6,opt,name=delivery_info,json=deliveryInfo,proto3" json:"delivery_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Data) Reset()         { *m = Data{} }
func (m *Data) String() string { return proto.CompactTextString(m) }
func (*Data) ProtoMessage()    {}
func (*Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{20}
}
func (m *Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Data.Unmarshal(m, b)
}
func (m *Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Data.Marshal(b, m, deterministic)
}
func (m *Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Data.Merge(m, src)
}
func (m *Data) XXX_Size() int {
	return xxx_messageInfo_Data.Size(m)
}
func (m *Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Data proto.InternalMessageInfo

func (m *Data) GetOrderId() string {
	if m != nil {
		return m.OrderId
	}
	return ""
}

func (m *Data) GetOutOrderNo() string {
	if m != nil {
		return m.OutOrderNo
	}
	return ""
}

func (m *Data) GetPaymentInfo() *PaymentInfo {
	if m != nil {
		return m.PaymentInfo
	}
	return nil
}

func (m *Data) GetCpsInfo() *CpsInfo {
	if m != nil {
		return m.CpsInfo
	}
	return nil
}

func (m *Data) GetRefundInfo() string {
	if m != nil {
		return m.RefundInfo
	}
	return ""
}

func (m *Data) GetDeliveryInfo() string {
	if m != nil {
		return m.DeliveryInfo
	}
	return ""
}

type PaymentInfo struct {
	// 订单实际支付金额，单位分
	TotalFee int64 `protobuf:"varint,1,opt,name=total_fee,json=totalFee,proto3" json:"total_fee,omitempty"`
	// 订单状态， INIT：初始状态 PROCESS：订单处理中 SUCCESS：成功 FAIL：失败 TIMEOUT：用户超时未支付
	OrderStatus string `protobuf:"bytes,2,opt,name=order_status,json=orderStatus,proto3" json:"order_status,omitempty"`
	// 支付时间，格式：2021-12-12 00:00:00
	PayTime string `protobuf:"bytes,3,opt,name=pay_time,json=payTime,proto3" json:"pay_time,omitempty"`
	// 支付渠道枚举：//1：微信，//2：支付宝//10: 抖音支付
	PayChannel int64 `protobuf:"varint,4,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel,omitempty"`
	// 渠道支付单号，如微信的支付单号
	ChannelPayId int64 `protobuf:"varint,5,opt,name=channel_pay_id,json=channelPayId,proto3" json:"channel_pay_id,omitempty"`
	// 卖家商户号 id
	SellerUid int64 `protobuf:"varint,6,opt,name=seller_uid,json=sellerUid,proto3" json:"seller_uid,omitempty"`
	// 预下单时开发者定义的透传信息
	CpExtra int64 `protobuf:"varint,7,opt,name=cp_extra,json=cpExtra,proto3" json:"cp_extra,omitempty"`
	// 结果描述信息，如失败原因
	Message              int64    `protobuf:"varint,8,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PaymentInfo) Reset()         { *m = PaymentInfo{} }
func (m *PaymentInfo) String() string { return proto.CompactTextString(m) }
func (*PaymentInfo) ProtoMessage()    {}
func (*PaymentInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{21}
}
func (m *PaymentInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PaymentInfo.Unmarshal(m, b)
}
func (m *PaymentInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PaymentInfo.Marshal(b, m, deterministic)
}
func (m *PaymentInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PaymentInfo.Merge(m, src)
}
func (m *PaymentInfo) XXX_Size() int {
	return xxx_messageInfo_PaymentInfo.Size(m)
}
func (m *PaymentInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_PaymentInfo.DiscardUnknown(m)
}

var xxx_messageInfo_PaymentInfo proto.InternalMessageInfo

func (m *PaymentInfo) GetTotalFee() int64 {
	if m != nil {
		return m.TotalFee
	}
	return 0
}

func (m *PaymentInfo) GetOrderStatus() string {
	if m != nil {
		return m.OrderStatus
	}
	return ""
}

func (m *PaymentInfo) GetPayTime() string {
	if m != nil {
		return m.PayTime
	}
	return ""
}

func (m *PaymentInfo) GetPayChannel() int64 {
	if m != nil {
		return m.PayChannel
	}
	return 0
}

func (m *PaymentInfo) GetChannelPayId() int64 {
	if m != nil {
		return m.ChannelPayId
	}
	return 0
}

func (m *PaymentInfo) GetSellerUid() int64 {
	if m != nil {
		return m.SellerUid
	}
	return 0
}

func (m *PaymentInfo) GetCpExtra() int64 {
	if m != nil {
		return m.CpExtra
	}
	return 0
}

func (m *PaymentInfo) GetMessage() int64 {
	if m != nil {
		return m.Message
	}
	return 0
}

type CpsInfo struct {
	// 订单总佣金，单位分
	TotalCommissionAmount int64 `protobuf:"varint,1,opt,name=total_commission_amount,json=totalCommissionAmount,proto3" json:"total_commission_amount,omitempty"`
	// 订单 CPS 信息。
	// 对于交易模板 1.0 和担保支付订单，Array 长度为 1
	CpsItemList          []*CpsItemList `protobuf:"bytes,2,rep,name=cps_item_list,json=cpsItemList,proto3" json:"cps_item_list,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CpsInfo) Reset()         { *m = CpsInfo{} }
func (m *CpsInfo) String() string { return proto.CompactTextString(m) }
func (*CpsInfo) ProtoMessage()    {}
func (*CpsInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{22}
}
func (m *CpsInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CpsInfo.Unmarshal(m, b)
}
func (m *CpsInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CpsInfo.Marshal(b, m, deterministic)
}
func (m *CpsInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CpsInfo.Merge(m, src)
}
func (m *CpsInfo) XXX_Size() int {
	return xxx_messageInfo_CpsInfo.Size(m)
}
func (m *CpsInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CpsInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CpsInfo proto.InternalMessageInfo

func (m *CpsInfo) GetTotalCommissionAmount() int64 {
	if m != nil {
		return m.TotalCommissionAmount
	}
	return 0
}

func (m *CpsInfo) GetCpsItemList() []*CpsItemList {
	if m != nil {
		return m.CpsItemList
	}
	return nil
}

type CpsItemList struct {
	// 分佣比例，万分位
	CommissionRate int64 `protobuf:"varint,1,opt,name=commission_rate,json=commissionRate,proto3" json:"commission_rate,omitempty"`
	// 佣金，单位分
	CommissionAmount int64 `protobuf:"varint,2,opt,name=commission_amount,json=commissionAmount,proto3" json:"commission_amount,omitempty"`
	// 分佣类型：
	//
	// 1：短视频
	// 2：直播间
	SourceType int64 `protobuf:"varint,3,opt,name=source_type,json=sourceType,proto3" json:"source_type,omitempty"`
	// 短视频/直播间 ID
	ItemId int64 `protobuf:"varint,4,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	// 售价，单位分
	SellAmount int64 `protobuf:"varint,5,opt,name=sell_amount,json=sellAmount,proto3" json:"sell_amount,omitempty"`
	// CPS 订单状态，交易系统下为子单状态
	//
	// 0：未支付，
	// 1：已支付(待使用)；
	// 2：已退款(不分佣)；
	// 3：已核销(已分佣)
	Status int64 `protobuf:"varint,6,opt,name=status,proto3" json:"status,omitempty"`
	// 抖音开平侧的商品单号，只存在交易系统
	ItemOrderId string `protobuf:"bytes,7,opt,name=item_order_id,json=itemOrderId,proto3" json:"item_order_id,omitempty"`
	// 达人抖音昵称
	CommissionUserNickname string `protobuf:"bytes,8,opt,name=commission_user_nickname,json=commissionUserNickname,proto3" json:"commission_user_nickname,omitempty"`
	// 达人抖音号
	CommissionUserDouyinid string   `protobuf:"bytes,9,opt,name=commission_user_douyinid,json=commissionUserDouyinid,proto3" json:"commission_user_douyinid,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *CpsItemList) Reset()         { *m = CpsItemList{} }
func (m *CpsItemList) String() string { return proto.CompactTextString(m) }
func (*CpsItemList) ProtoMessage()    {}
func (*CpsItemList) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{23}
}
func (m *CpsItemList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CpsItemList.Unmarshal(m, b)
}
func (m *CpsItemList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CpsItemList.Marshal(b, m, deterministic)
}
func (m *CpsItemList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CpsItemList.Merge(m, src)
}
func (m *CpsItemList) XXX_Size() int {
	return xxx_messageInfo_CpsItemList.Size(m)
}
func (m *CpsItemList) XXX_DiscardUnknown() {
	xxx_messageInfo_CpsItemList.DiscardUnknown(m)
}

var xxx_messageInfo_CpsItemList proto.InternalMessageInfo

func (m *CpsItemList) GetCommissionRate() int64 {
	if m != nil {
		return m.CommissionRate
	}
	return 0
}

func (m *CpsItemList) GetCommissionAmount() int64 {
	if m != nil {
		return m.CommissionAmount
	}
	return 0
}

func (m *CpsItemList) GetSourceType() int64 {
	if m != nil {
		return m.SourceType
	}
	return 0
}

func (m *CpsItemList) GetItemId() int64 {
	if m != nil {
		return m.ItemId
	}
	return 0
}

func (m *CpsItemList) GetSellAmount() int64 {
	if m != nil {
		return m.SellAmount
	}
	return 0
}

func (m *CpsItemList) GetStatus() int64 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *CpsItemList) GetItemOrderId() string {
	if m != nil {
		return m.ItemOrderId
	}
	return ""
}

func (m *CpsItemList) GetCommissionUserNickname() string {
	if m != nil {
		return m.CommissionUserNickname
	}
	return ""
}

func (m *CpsItemList) GetCommissionUserDouyinid() string {
	if m != nil {
		return m.CommissionUserDouyinid
	}
	return ""
}

type RefundInfo struct {
	// 订单退款总金额，单位分，没有已退款记录，为 0
	TotalRefundAmount int64 `protobuf:"varint,1,opt,name=total_refund_amount,json=totalRefundAmount,proto3" json:"total_refund_amount,omitempty"`
	// 订单已退款详细信息，如果没有已退款记录，为 null
	// 对于交易模板 1.0 和担保支付订单，为整单退款记录
	// 对于交易系统，为商品单退款记录
	RefundItems          []*RefundItems `protobuf:"bytes,2,rep,name=refund_items,json=refundItems,proto3" json:"refund_items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *RefundInfo) Reset()         { *m = RefundInfo{} }
func (m *RefundInfo) String() string { return proto.CompactTextString(m) }
func (*RefundInfo) ProtoMessage()    {}
func (*RefundInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{24}
}
func (m *RefundInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefundInfo.Unmarshal(m, b)
}
func (m *RefundInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefundInfo.Marshal(b, m, deterministic)
}
func (m *RefundInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefundInfo.Merge(m, src)
}
func (m *RefundInfo) XXX_Size() int {
	return xxx_messageInfo_RefundInfo.Size(m)
}
func (m *RefundInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_RefundInfo.DiscardUnknown(m)
}

var xxx_messageInfo_RefundInfo proto.InternalMessageInfo

func (m *RefundInfo) GetTotalRefundAmount() int64 {
	if m != nil {
		return m.TotalRefundAmount
	}
	return 0
}

func (m *RefundInfo) GetRefundItems() []*RefundItems {
	if m != nil {
		return m.RefundItems
	}
	return nil
}

type RefundItems struct {
	// 开发者系统生成的退款单号，与抖音开平退款单号 refund_id 唯一关联
	OutRefundNo string `protobuf:"bytes,1,opt,name=out_refund_no,json=outRefundNo,proto3" json:"out_refund_no,omitempty"`
	// 退款金额，单位分
	RefundAmount int64 `protobuf:"varint,2,opt,name=refund_amount,json=refundAmount,proto3" json:"refund_amount,omitempty"`
	// 显示退款状态，默认“已退款”
	RefundStatus string `protobuf:"bytes,3,opt,name=refund_status,json=refundStatus,proto3" json:"refund_status,omitempty"`
	// 退款时间，13 位毫秒时间戳，只有已退款才有退款时间
	RefundAt int64 `protobuf:"varint,4,opt,name=refund_at,json=refundAt,proto3" json:"refund_at,omitempty"`
	// 抖音开平侧的商品单号，只存在交易系统
	ItemOrderId          string   `protobuf:"bytes,5,opt,name=item_order_id,json=itemOrderId,proto3" json:"item_order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RefundItems) Reset()         { *m = RefundItems{} }
func (m *RefundItems) String() string { return proto.CompactTextString(m) }
func (*RefundItems) ProtoMessage()    {}
func (*RefundItems) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{25}
}
func (m *RefundItems) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RefundItems.Unmarshal(m, b)
}
func (m *RefundItems) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RefundItems.Marshal(b, m, deterministic)
}
func (m *RefundItems) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RefundItems.Merge(m, src)
}
func (m *RefundItems) XXX_Size() int {
	return xxx_messageInfo_RefundItems.Size(m)
}
func (m *RefundItems) XXX_DiscardUnknown() {
	xxx_messageInfo_RefundItems.DiscardUnknown(m)
}

var xxx_messageInfo_RefundItems proto.InternalMessageInfo

func (m *RefundItems) GetOutRefundNo() string {
	if m != nil {
		return m.OutRefundNo
	}
	return ""
}

func (m *RefundItems) GetRefundAmount() int64 {
	if m != nil {
		return m.RefundAmount
	}
	return 0
}

func (m *RefundItems) GetRefundStatus() string {
	if m != nil {
		return m.RefundStatus
	}
	return ""
}

func (m *RefundItems) GetRefundAt() int64 {
	if m != nil {
		return m.RefundAt
	}
	return 0
}

func (m *RefundItems) GetItemOrderId() string {
	if m != nil {
		return m.ItemOrderId
	}
	return ""
}

type DeliveryInfo struct {
	// 订单核销总金额，单位分，没有核销记录，为 0。
	TotalDeliveryAmount int64 `protobuf:"varint,1,opt,name=total_delivery_amount,json=totalDeliveryAmount,proto3" json:"total_delivery_amount,omitempty"`
	// 订单核销详细信息，如果没有核销记录，为 null。
	// 对于交易模板 1.0 和担保支付订单，为整单核销记录。
	// 对于交易系统，为商品单核销记录。
	DeliveryItems        []*DeliveryItems `protobuf:"bytes,2,rep,name=delivery_items,json=deliveryItems,proto3" json:"delivery_items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DeliveryInfo) Reset()         { *m = DeliveryInfo{} }
func (m *DeliveryInfo) String() string { return proto.CompactTextString(m) }
func (*DeliveryInfo) ProtoMessage()    {}
func (*DeliveryInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{26}
}
func (m *DeliveryInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeliveryInfo.Unmarshal(m, b)
}
func (m *DeliveryInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeliveryInfo.Marshal(b, m, deterministic)
}
func (m *DeliveryInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeliveryInfo.Merge(m, src)
}
func (m *DeliveryInfo) XXX_Size() int {
	return xxx_messageInfo_DeliveryInfo.Size(m)
}
func (m *DeliveryInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_DeliveryInfo.DiscardUnknown(m)
}

var xxx_messageInfo_DeliveryInfo proto.InternalMessageInfo

func (m *DeliveryInfo) GetTotalDeliveryAmount() int64 {
	if m != nil {
		return m.TotalDeliveryAmount
	}
	return 0
}

func (m *DeliveryInfo) GetDeliveryItems() []*DeliveryItems {
	if m != nil {
		return m.DeliveryItems
	}
	return nil
}

type DeliveryItems struct {
	// 核销金额，单位分
	DeliveryAmount int64 `protobuf:"varint,1,opt,name=delivery_amount,json=deliveryAmount,proto3" json:"delivery_amount,omitempty"`
	// 显示核销状态，默认“已核销”
	DeliveryStatus string `protobuf:"bytes,2,opt,name=delivery_status,json=deliveryStatus,proto3" json:"delivery_status,omitempty"`
	// 核销时间，13 位毫秒时间戳
	DeliveryAt int64 `protobuf:"varint,3,opt,name=delivery_at,json=deliveryAt,proto3" json:"delivery_at,omitempty"`
	// 抖音开平侧的商品单号，只存在交易系统中
	ItemOrderId          string   `protobuf:"bytes,4,opt,name=item_order_id,json=itemOrderId,proto3" json:"item_order_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeliveryItems) Reset()         { *m = DeliveryItems{} }
func (m *DeliveryItems) String() string { return proto.CompactTextString(m) }
func (*DeliveryItems) ProtoMessage()    {}
func (*DeliveryItems) Descriptor() ([]byte, []int) {
	return fileDescriptor_eadd3b848a405807, []int{27}
}
func (m *DeliveryItems) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeliveryItems.Unmarshal(m, b)
}
func (m *DeliveryItems) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeliveryItems.Marshal(b, m, deterministic)
}
func (m *DeliveryItems) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeliveryItems.Merge(m, src)
}
func (m *DeliveryItems) XXX_Size() int {
	return xxx_messageInfo_DeliveryItems.Size(m)
}
func (m *DeliveryItems) XXX_DiscardUnknown() {
	xxx_messageInfo_DeliveryItems.DiscardUnknown(m)
}

var xxx_messageInfo_DeliveryItems proto.InternalMessageInfo

func (m *DeliveryItems) GetDeliveryAmount() int64 {
	if m != nil {
		return m.DeliveryAmount
	}
	return 0
}

func (m *DeliveryItems) GetDeliveryStatus() string {
	if m != nil {
		return m.DeliveryStatus
	}
	return ""
}

func (m *DeliveryItems) GetDeliveryAt() int64 {
	if m != nil {
		return m.DeliveryAt
	}
	return 0
}

func (m *DeliveryItems) GetItemOrderId() string {
	if m != nil {
		return m.ItemOrderId
	}
	return ""
}

func init() {
	proto.RegisterType((*MerchantAuditCallbackRequest)(nil), "douyin.MerchantAuditCallbackRequest")
	proto.RegisterType((*MerchantAuditCallbackResponse)(nil), "douyin.MerchantAuditCallbackResponse")
	proto.RegisterType((*MerchantAuditCallbackResponse_Resp)(nil), "douyin.MerchantAuditCallbackResponse.Resp")
	proto.RegisterType((*CreateRefundRequest)(nil), "douyin.CreateRefundRequest")
	proto.RegisterType((*OrderEntrySchema)(nil), "douyin.OrderEntrySchema")
	proto.RegisterType((*CreateREfundResponse)(nil), "douyin.CreateREfundResponse")
	proto.RegisterType((*CreateREfundResponse_Resp)(nil), "douyin.CreateREfundResponse.Resp")
	proto.RegisterType((*CreateREfundData)(nil), "douyin.CreateREfundData")
	proto.RegisterType((*QueryRefundRequest)(nil), "douyin.QueryRefundRequest")
	proto.RegisterType((*QueryRefundResponse)(nil), "douyin.QueryRefundResponse")
	proto.RegisterType((*QueryRefundResponse_Resp)(nil), "douyin.QueryRefundResponse.Resp")
	proto.RegisterType((*QueryRefundData)(nil), "douyin.QueryRefundData")
	proto.RegisterType((*RefundList)(nil), "douyin.RefundList")
	proto.RegisterType((*MerchantAuditDetail)(nil), "douyin.MerchantAuditDetail")
	proto.RegisterType((*ItemOrderDetail)(nil), "douyin.ItemOrderDetail")
	proto.RegisterType((*QuerySettleRequest)(nil), "douyin.QuerySettleRequest")
	proto.RegisterType((*QuerySettleResponse)(nil), "douyin.QuerySettleResponse")
	proto.RegisterType((*QuerySettleResponse_Resp)(nil), "douyin.QuerySettleResponse.Resp")
	proto.RegisterType((*QuerySettleData)(nil), "douyin.QuerySettleData")
	proto.RegisterType((*QueryOrderRequest)(nil), "douyin.QueryOrderRequest")
	proto.RegisterType((*QueryOrderResponse)(nil), "douyin.QueryOrderResponse")
	proto.RegisterType((*QueryOrderResponse_Resp)(nil), "douyin.QueryOrderResponse.Resp")
	proto.RegisterType((*QuqeyOrderData)(nil), "douyin.QuqeyOrderData")
	proto.RegisterType((*QueryCpsRequest)(nil), "douyin.QueryCpsRequest")
	proto.RegisterType((*QueryCpsResponse)(nil), "douyin.QueryCpsResponse")
	proto.RegisterType((*QueryCpsResponseResp)(nil), "douyin.QueryCpsResponse.resp")
	proto.RegisterType((*Data)(nil), "douyin.Data")
	proto.RegisterType((*PaymentInfo)(nil), "douyin.PaymentInfo")
	proto.RegisterType((*CpsInfo)(nil), "douyin.CpsInfo")
	proto.RegisterType((*CpsItemList)(nil), "douyin.CpsItemList")
	proto.RegisterType((*RefundInfo)(nil), "douyin.RefundInfo")
	proto.RegisterType((*RefundItems)(nil), "douyin.RefundItems")
	proto.RegisterType((*DeliveryInfo)(nil), "douyin.DeliveryInfo")
	proto.RegisterType((*DeliveryItems)(nil), "douyin.DeliveryItems")
}

func init() { proto.RegisterFile("api/douyin/trade.proto", fileDescriptor_eadd3b848a405807) }

var fileDescriptor_eadd3b848a405807 = []byte{
	// 2215 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x59, 0x4f, 0x6f, 0xdb, 0xc8,
	0x15, 0x07, 0x4d, 0x59, 0xb2, 0x9e, 0xe4, 0x7f, 0xa3, 0x38, 0x56, 0x6c, 0x27, 0x54, 0xb8, 0xd9,
	0x5d, 0x37, 0xd9, 0x95, 0x1b, 0x6f, 0x91, 0xdd, 0x4d, 0x83, 0xb6, 0xb1, 0x93, 0x05, 0x0c, 0x34,
	0xd9, 0x94, 0x49, 0x2e, 0x7b, 0x11, 0x26, 0xe2, 0xd8, 0x21, 0x22, 0x91, 0x0c, 0x39, 0x0a, 0xaa,
	0x9e, 0x8a, 0x16, 0xe8, 0xb5, 0x87, 0x02, 0xfd, 0x08, 0x3d, 0xf5, 0x03, 0x14, 0x8b, 0x9e, 0x0a,
	0xf4, 0xb6, 0x87, 0x02, 0x0b, 0xf4, 0xa8, 0x53, 0xaf, 0xdd, 0x83, 0x80, 0xde, 0x0b, 0xce, 0x9b,
	0x21, 0x87, 0x7f, 0xec, 0x38, 0x49, 0x7b, 0xd8, 0x93, 0x38, 0xf3, 0xde, 0x9b, 0x37, 0x7c, 0xef,
	0xfd, 0x7e, 0xf3, 0x86, 0x82, 0x8b, 0x34, 0xf4, 0xf6, 0xdc, 0x60, 0x32, 0xf5, 0xfc, 0x3d, 0x1e,
	0x51, 0x97, 0xf5, 0xc3, 0x28, 0xe0, 0x01, 0xa9, 0xe3, 0xdc, 0xd6, 0xc7, 0x27, 0x1e, 0x7f, 0x3e,
	0x79, 0xd6, 0x1f, 0x06, 0xe3, 0xbd, 0x93, 0xe0, 0x24, 0xd8, 0x13, 0xe2, 0x67, 0x93, 0x63, 0x31,
	0x12, 0x03, 0xf1, 0x84, 0x66, 0x5b, 0x3b, 0x27, 0x41, 0x70, 0x32, 0x62, 0x7b, 0xc9, 0xaa, 0xd4,
	0xf7, 0x03, 0x4e, 0xb9, 0x17, 0xf8, 0x31, 0x4a, 0xed, 0x6f, 0x16, 0x60, 0xe7, 0x01, 0x8b, 0x86,
	0xcf, 0xa9, 0xcf, 0xef, 0x4e, 0x5c, 0x8f, 0x1f, 0xd2, 0xd1, 0xe8, 0x19, 0x1d, 0xbe, 0x70, 0xd8,
	0xcb, 0x09, 0x8b, 0x39, 0xb9, 0x0d, 0x8b, 0x34, 0x0c, 0x3d, 0xb7, 0x6b, 0xf4, 0x8c, 0xdd, 0xe6,
	0xc1, 0xb5, 0xf9, 0xcc, 0xea, 0x1d, 0x07, 0xd1, 0xf8, 0xb6, 0x2d, 0xa6, 0xed, 0xde, 0x2b, 0x3a,
	0xf2, 0x5c, 0xca, 0xd9, 0x6d, 0x3b, 0x62, 0x2f, 0x27, 0x5e, 0xc4, 0x5c, 0xdb, 0x41, 0x13, 0xf2,
	0x08, 0x96, 0x83, 0x09, 0x1f, 0x44, 0xec, 0x78, 0xe2, 0xbb, 0x03, 0x3f, 0xe8, 0x2e, 0x88, 0x35,
	0x3e, 0x9a, 0xcf, 0xac, 0x5d, 0x5c, 0x23, 0x27, 0xae, 0x5e, 0xab, 0x15, 0x4c, 0xb8, 0x23, 0x54,
	0x1e, 0x06, 0xe4, 0x19, 0x74, 0xa4, 0x3a, 0x4d, 0x36, 0x3b, 0x88, 0x39, 0xe5, 0x93, 0xb8, 0x6b,
	0xf6, 0x8c, 0x5d, 0xf3, 0x60, 0x7f, 0x3e, 0xb3, 0xfa, 0xb8, 0x6e, 0x85, 0x52, 0xf5, 0xea, 0xeb,
	0xa8, 0x29, 0x5e, 0xfd, 0xb1, 0xd0, 0x23, 0xb7, 0xa1, 0xed, 0x32, 0x7f, 0x3a, 0x18, 0xb3, 0x38,
	0xa6, 0x27, 0xac, 0x5b, 0x13, 0x9b, 0xde, 0x9c, 0xcf, 0xac, 0x0e, 0x2e, 0xae, 0x4b, 0x6d, 0xa7,
	0x95, 0x0c, 0x1f, 0xc8, 0x51, 0x00, 0x97, 0x4f, 0x89, 0x66, 0x1c, 0x06, 0x7e, 0xcc, 0xc8, 0x06,
	0xd4, 0x59, 0x14, 0x25, 0xb1, 0x48, 0xe2, 0x69, 0x3a, 0x8b, 0x2c, 0x8a, 0x1e, 0x06, 0xe4, 0x12,
	0x2c, 0x25, 0xd3, 0xdc, 0x0b, 0x63, 0x0c, 0x92, 0xd3, 0x60, 0x51, 0xf4, 0xc4, 0x0b, 0xe3, 0xad,
	0x1d, 0xa8, 0x25, 0xd6, 0xe4, 0x02, 0x2c, 0x8e, 0x82, 0x13, 0x95, 0x08, 0x07, 0x07, 0xf6, 0xef,
	0x16, 0xa1, 0x73, 0x18, 0x31, 0xca, 0x19, 0xc6, 0xe8, 0x7f, 0x91, 0xb6, 0x07, 0xd0, 0x4e, 0xf2,
	0x12, 0x44, 0x2e, 0x8b, 0xb2, 0xac, 0xdd, 0x98, 0xcf, 0xac, 0x0f, 0xb3, 0xac, 0x29, 0x69, 0xf5,
	0x4a, 0x10, 0x4c, 0xf8, 0x97, 0x89, 0xc6, 0xc3, 0xa0, 0x5c, 0x05, 0xe6, 0xbb, 0x56, 0x41, 0x1f,
	0x96, 0x86, 0xe1, 0x80, 0xfd, 0x92, 0x47, 0x54, 0x66, 0xa7, 0x33, 0x9f, 0x59, 0xab, 0xb8, 0x98,
	0x92, 0xd8, 0x4e, 0x63, 0x18, 0xde, 0x4f, 0x9e, 0xc8, 0x14, 0x08, 0x6e, 0x97, 0xf9, 0x3c, 0x9a,
	0x0e, 0xe2, 0xe1, 0x73, 0x36, 0xa6, 0xdd, 0xc5, 0x9e, 0xb1, 0xdb, 0xda, 0xef, 0xf6, 0x11, 0x56,
	0x7d, 0xb1, 0xdd, 0xfb, 0x89, 0xc2, 0x63, 0x21, 0x3f, 0xb8, 0x39, 0x9f, 0x59, 0x1f, 0xcb, 0x0d,
	0x96, 0xac, 0xab, 0x77, 0xb9, 0x16, 0x14, 0x16, 0x21, 0x3f, 0x02, 0xf0, 0x03, 0xee, 0x1d, 0x4f,
	0x07, 0x93, 0x68, 0xd4, 0xad, 0x8b, 0xcd, 0x6e, 0xcc, 0x67, 0xd6, 0x3a, 0x2e, 0x9c, 0xc9, 0x6c,
	0xa7, 0x89, 0x83, 0xa7, 0xd1, 0x88, 0x50, 0x58, 0xf7, 0x38, 0x1b, 0xcb, 0x20, 0xbb, 0x8c, 0x53,
	0x6f, 0xd4, 0x6d, 0xf4, 0xcc, 0xdd, 0xd6, 0xfe, 0xa6, 0xda, 0xef, 0x11, 0x67, 0x63, 0xb1, 0xe7,
	0x7b, 0x42, 0x7c, 0xb0, 0x33, 0x9f, 0x59, 0x5d, 0x5c, 0xb5, 0x64, 0x6b, 0x3b, 0xab, 0x5e, 0x5e,
	0x9d, 0x3c, 0x4c, 0x91, 0xc4, 0x03, 0x4e, 0x47, 0x03, 0x3a, 0x0e, 0x26, 0x3e, 0xef, 0x2e, 0x09,
	0x24, 0x5d, 0x99, 0xcf, 0xac, 0xad, 0x1c, 0x92, 0x74, 0xa5, 0x14, 0x35, 0x4f, 0x92, 0xc9, 0xbb,
	0x38, 0xf7, 0x0a, 0xd6, 0x8a, 0x11, 0x24, 0x9f, 0x42, 0x2d, 0xa4, 0xfc, 0xb9, 0xac, 0xc1, 0xf7,
	0xe6, 0x33, 0xcb, 0xc2, 0x45, 0x93, 0xd9, 0xea, 0x08, 0x0a, 0x03, 0xf2, 0x03, 0xa8, 0x87, 0x34,
	0xa2, 0x63, 0x09, 0x86, 0x83, 0xf5, 0xf9, 0xcc, 0x5a, 0x56, 0xa6, 0xc9, 0xbc, 0xed, 0x48, 0x05,
	0xfb, 0x9f, 0x06, 0x5c, 0x90, 0x00, 0xb8, 0x8f, 0x00, 0x78, 0x5b, 0xa4, 0x91, 0x9f, 0x01, 0x44,
	0x2c, 0x56, 0x85, 0x65, 0x8a, 0xf2, 0xb8, 0xaa, 0xc2, 0x5d, 0xe5, 0xa3, 0x9f, 0x3c, 0x38, 0xcd,
	0xc4, 0x08, 0x0b, 0xed, 0x23, 0xa8, 0xb9, 0x94, 0x63, 0x51, 0x6a, 0xa5, 0xa5, 0xdb, 0xde, 0xa3,
	0x9c, 0x3a, 0x42, 0xeb, 0x35, 0xc8, 0x1e, 0xc2, 0x5a, 0xd1, 0x8e, 0x6c, 0x43, 0x53, 0xe6, 0x23,
	0xd5, 0x5e, 0xc2, 0x89, 0x23, 0x97, 0xec, 0xc3, 0x46, 0x8e, 0xf6, 0x5c, 0x46, 0xdd, 0x91, 0xe7,
	0x33, 0xf1, 0x9a, 0xa6, 0xd3, 0xd1, 0x98, 0xee, 0x9e, 0x14, 0xd9, 0xdf, 0x19, 0x40, 0x7e, 0x31,
	0x61, 0xd1, 0x34, 0xcf, 0x1e, 0x37, 0x4b, 0x7e, 0x0e, 0x2e, 0xcc, 0x67, 0xd6, 0x5a, 0xae, 0x24,
	0x3c, 0xd7, 0xd6, 0xbc, 0x7f, 0x56, 0xcd, 0xf5, 0xd5, 0x66, 0x39, 0x34, 0xef, 0xc1, 0x12, 0xd6,
	0xaa, 0xe7, 0x4a, 0x6a, 0xa8, 0x36, 0x6a, 0x08, 0xad, 0x23, 0x37, 0xe3, 0xb6, 0xda, 0x1b, 0x73,
	0x9b, 0xfd, 0xad, 0x01, 0x9d, 0xdc, 0x0b, 0xbf, 0x75, 0xb5, 0xfc, 0xb4, 0xa2, 0x5a, 0x7a, 0x2a,
	0xe3, 0x15, 0x2e, 0x4a, 0xc5, 0x72, 0x23, 0x57, 0x2c, 0x9b, 0x15, 0xa6, 0xe7, 0xae, 0x95, 0x2f,
	0x60, 0xb5, 0x60, 0x46, 0x3e, 0x81, 0x96, 0x8c, 0xdd, 0xc8, 0x8b, 0x79, 0xd7, 0x10, 0xe4, 0x41,
	0x94, 0x13, 0x54, 0xfc, 0xb9, 0x17, 0x73, 0x07, 0xa2, 0xf4, 0xd9, 0xfe, 0xc6, 0x04, 0xc8, 0x44,
	0x67, 0x97, 0x9b, 0x5d, 0x99, 0xf0, 0x22, 0x51, 0x57, 0x92, 0x8c, 0x38, 0xae, 0x2b, 0x48, 0x84,
	0xbc, 0x07, 0xcb, 0x52, 0x5f, 0x1e, 0xec, 0x22, 0xc3, 0x4e, 0x1b, 0x27, 0xe5, 0xf9, 0x9c, 0xed,
	0x8a, 0x72, 0x41, 0xe2, 0xa6, 0xda, 0xd5, 0x5d, 0x4e, 0xba, 0xd0, 0x50, 0xe7, 0x76, 0x1d, 0xf3,
	0x25, 0x87, 0x49, 0x2a, 0xd3, 0x32, 0x6b, 0xa0, 0x48, 0x15, 0xd4, 0x61, 0x15, 0xdd, 0x2e, 0x9d,
	0x49, 0xb7, 0x65, 0x42, 0xfd, 0x12, 0x36, 0xc6, 0xf2, 0xe8, 0x4f, 0x01, 0x28, 0x16, 0x6a, 0x8a,
	0xfc, 0x6e, 0xab, 0x85, 0x72, 0xfd, 0x81, 0x5c, 0xac, 0x33, 0x2e, 0x4f, 0x26, 0xef, 0x39, 0x14,
	0x04, 0x90, 0xbc, 0x27, 0xe0, 0x7b, 0xe2, 0xc4, 0xdd, 0x5c, 0xa4, 0x82, 0x49, 0x34, 0x64, 0xdd,
	0x96, 0x50, 0x50, 0x91, 0x12, 0x73, 0xf6, 0xef, 0x0d, 0xe8, 0x54, 0xb8, 0x3b, 0x9d, 0x29, 0x8c,
	0x53, 0x99, 0x82, 0x5c, 0x85, 0x76, 0xae, 0xe5, 0x92, 0xd9, 0xa6, 0x5a, 0xe3, 0x74, 0xb5, 0xd0,
	0x38, 0x99, 0xa8, 0xa2, 0xf7, 0x47, 0x5f, 0xc1, 0x6a, 0x21, 0x90, 0x49, 0x1d, 0x69, 0xc1, 0x4f,
	0x0b, 0xad, 0x95, 0xc6, 0xf7, 0xc8, 0xd5, 0xde, 0x56, 0x56, 0xd0, 0x82, 0xfe, 0xb6, 0xf2, 0x04,
	0xfa, 0xf3, 0x82, 0xe4, 0xb2, 0xc7, 0x8c, 0xf3, 0x11, 0x53, 0x5c, 0xf6, 0x79, 0xa1, 0x9b, 0x31,
	0x8a, 0xed, 0x5c, 0xae, 0x9b, 0xc9, 0x75, 0x2e, 0x77, 0xb0, 0xc4, 0x63, 0xb1, 0x5e, 0xc6, 0x69,
	0xdd, 0xf9, 0xcc, 0xba, 0x90, 0xd9, 0xa6, 0x62, 0xe4, 0x35, 0xf4, 0x8e, 0x5d, 0x4a, 0x81, 0xd7,
	0xb4, 0x2e, 0x45, 0x49, 0x34, 0x5a, 0xbb, 0x09, 0x4d, 0xb9, 0x54, 0x4a, 0x6d, 0x1a, 0x11, 0xa6,
	0x22, 0xdb, 0x59, 0xc2, 0x67, 0x9d, 0x09, 0x17, 0xdf, 0x81, 0x09, 0x55, 0xb8, 0xfe, 0x8f, 0x4c,
	0x98, 0x77, 0xf1, 0x46, 0x4c, 0x88, 0xa6, 0xe7, 0x66, 0xc2, 0xaf, 0x4d, 0x49, 0x85, 0x99, 0x1d,
	0xe9, 0x55, 0x55, 0x40, 0x2e, 0xd1, 0x76, 0x65, 0xa2, 0xf3, 0xe9, 0xbc, 0x54, 0x4c, 0x67, 0x96,
	0xb9, 0xed, 0x52, 0xe6, 0xb4, 0x1c, 0x95, 0xea, 0x7b, 0xb1, 0xb2, 0xbe, 0xe5, 0x02, 0xb2, 0xbe,
	0xeb, 0x58, 0xdf, 0x38, 0x99, 0x91, 0xa3, 0x54, 0x92, 0x10, 0x44, 0x16, 0x93, 0x4a, 0x12, 0x83,
	0x99, 0x52, 0x4a, 0x63, 0x9a, 0x92, 0x84, 0x9c, 0x05, 0x2d, 0xa9, 0xc4, 0xbd, 0x31, 0x13, 0x04,
	0x65, 0x3a, 0x80, 0x53, 0x4f, 0xbc, 0x31, 0x23, 0x04, 0x6a, 0x11, 0x7d, 0xc1, 0x24, 0xeb, 0x88,
	0x67, 0x72, 0x05, 0x60, 0x18, 0x8c, 0xc7, 0x5e, 0x1c, 0x7b, 0x81, 0x2f, 0xe9, 0x46, 0x9b, 0x49,
	0xe2, 0x93, 0x36, 0xe5, 0x6d, 0x8c, 0x8f, 0xea, 0xbf, 0x3f, 0x80, 0x55, 0xcf, 0xf7, 0x59, 0x34,
	0xc8, 0xa2, 0xb4, 0x2c, 0x34, 0x96, 0xc5, 0xf4, 0x63, 0x19, 0x2a, 0xfb, 0x6b, 0x03, 0xd6, 0x45,
	0xf2, 0x44, 0x5c, 0x14, 0x80, 0x75, 0x1c, 0x19, 0xe7, 0xc0, 0xd1, 0xe7, 0x95, 0xd7, 0x97, 0x73,
	0x01, 0x3e, 0xc5, 0x93, 0xf9, 0xe6, 0x78, 0xfa, 0x87, 0x6a, 0xa5, 0xe4, 0xe6, 0xdf, 0x1a, 0x4e,
	0x3f, 0xa9, 0x80, 0x93, 0x95, 0xc3, 0x44, 0xce, 0x43, 0x09, 0x4d, 0xd7, 0x73, 0x68, 0xba, 0x98,
	0x59, 0xbe, 0x64, 0x68, 0x79, 0x6e, 0x30, 0xfd, 0xc7, 0x84, 0x95, 0xbc, 0x59, 0x0e, 0x05, 0x46,
	0x1e, 0x05, 0xbd, 0xaa, 0xb8, 0xe7, 0xc2, 0x5b, 0xa2, 0x71, 0xb3, 0x4c, 0xe3, 0x65, 0x2c, 0xd4,
	0x2a, 0xb0, 0xb0, 0x0d, 0x4d, 0xec, 0x28, 0x8e, 0x19, 0x53, 0x3d, 0x80, 0x98, 0xf8, 0x82, 0x89,
	0xa3, 0x0a, 0x37, 0x21, 0x71, 0x52, 0x97, 0x60, 0x4e, 0xe6, 0x24, 0x4c, 0x2e, 0xc1, 0x52, 0x48,
	0xa7, 0x58, 0xfe, 0xb2, 0x19, 0x08, 0xe9, 0x54, 0xd4, 0xbe, 0x05, 0xad, 0x44, 0x94, 0x1c, 0x9a,
	0x3e, 0x43, 0xfc, 0x98, 0x0e, 0x84, 0x74, 0x7a, 0x88, 0x33, 0xe4, 0x1a, 0xac, 0x48, 0xe1, 0x20,
	0x51, 0xf4, 0x5c, 0x01, 0xa0, 0xa6, 0xd3, 0x96, 0xb3, 0x8f, 0xe8, 0xf4, 0xc8, 0x25, 0x97, 0x01,
	0x62, 0x36, 0x1a, 0xb1, 0x68, 0x30, 0xf1, 0x5c, 0x01, 0xa4, 0xa6, 0xd3, 0xc4, 0x99, 0xa7, 0x9e,
	0x4b, 0x36, 0xa1, 0x21, 0x58, 0xc1, 0x73, 0x05, 0x94, 0x9a, 0x4e, 0x3d, 0x19, 0x1e, 0xb9, 0x67,
	0xc1, 0x48, 0xeb, 0x6d, 0x96, 0xf3, 0xbd, 0xcd, 0x2e, 0xac, 0x85, 0x74, 0x3a, 0x66, 0x3e, 0xcf,
	0x68, 0x66, 0x45, 0xa8, 0xac, 0xc8, 0x79, 0x8d, 0x69, 0x5c, 0x36, 0xf2, 0x5e, 0xb1, 0x68, 0x3a,
	0xe0, 0xd3, 0x90, 0x75, 0x57, 0x31, 0xba, 0x6a, 0xf2, 0xc9, 0x34, 0x64, 0xf6, 0x5f, 0x0c, 0x49,
	0xa2, 0x87, 0x61, 0xfc, 0x3d, 0x43, 0xe1, 0xdf, 0x0c, 0x58, 0xcb, 0xb6, 0xfe, 0xd6, 0x18, 0xbc,
	0x53, 0x81, 0xc1, 0xcb, 0x39, 0x0c, 0x6a, 0xeb, 0xf7, 0xa3, 0x02, 0x02, 0x7b, 0x39, 0x04, 0xb6,
	0x95, 0x5d, 0x1e, 0x77, 0xd1, 0xe9, 0xb8, 0xfb, 0xb7, 0x01, 0xb5, 0x77, 0x47, 0xdb, 0x2d, 0x68,
	0xab, 0xa2, 0xf0, 0xfc, 0xe3, 0x40, 0xbe, 0x45, 0x47, 0xed, 0xe6, 0x11, 0xca, 0x8e, 0xfc, 0xe3,
	0xc0, 0x69, 0x85, 0xd9, 0x80, 0x5c, 0x4f, 0x2a, 0x30, 0x46, 0x1b, 0x7c, 0x83, 0xd5, 0xf4, 0x22,
	0x1b, 0xc6, 0x42, 0xbf, 0x31, 0xc4, 0x87, 0x04, 0x2c, 0xea, 0x86, 0x90, 0xa8, 0xe3, 0xd1, 0x26,
	0x6f, 0x14, 0x42, 0x41, 0xaf, 0x37, 0xa1, 0x82, 0x60, 0x4c, 0xeb, 0x2d, 0x51, 0xb2, 0x7f, 0xbb,
	0x00, 0x2d, 0x6d, 0x3b, 0x79, 0x74, 0x1b, 0xaf, 0x41, 0xf7, 0xc2, 0xd9, 0xe8, 0x36, 0xcf, 0x44,
	0x77, 0xed, 0x1c, 0xe8, 0x46, 0x7a, 0x39, 0x0b, 0xdd, 0x78, 0x5a, 0x6b, 0xe8, 0xd6, 0x41, 0xdc,
	0x10, 0xc2, 0x2a, 0x10, 0x23, 0xb5, 0xa8, 0xa1, 0xfd, 0x2b, 0x68, 0xc8, 0xf8, 0x92, 0x5b, 0xb0,
	0x89, 0x01, 0xc8, 0xce, 0x57, 0xc5, 0x86, 0x18, 0x8e, 0x0d, 0x21, 0x3e, 0x4c, 0xa5, 0x92, 0x16,
	0x3f, 0x85, 0x65, 0x91, 0xba, 0x84, 0x59, 0xc4, 0xb5, 0x6f, 0x41, 0x5c, 0x62, 0x3a, 0x7a, 0xfe,
	0x38, 0x1b, 0x8b, 0x7b, 0x5f, 0x6b, 0x98, 0x0d, 0xec, 0xef, 0x16, 0xa0, 0xa5, 0x09, 0xc9, 0x87,
	0xb0, 0xaa, 0xb9, 0x8e, 0x28, 0x57, 0x79, 0x58, 0xc9, 0xa6, 0x1d, 0xca, 0x19, 0xb9, 0x01, 0xeb,
	0xe5, 0x3d, 0x62, 0x77, 0xbe, 0x36, 0x2c, 0x6e, 0x2f, 0xe9, 0x3b, 0xc4, 0xcd, 0x04, 0xa9, 0xc7,
	0x94, 0x7d, 0x87, 0x98, 0x4a, 0x88, 0x47, 0x67, 0x45, 0xcc, 0x8c, 0x62, 0x45, 0xd1, 0xb1, 0x8c,
	0xd2, 0x0b, 0xe4, 0xa2, 0xea, 0x58, 0x46, 0xea, 0xe6, 0x78, 0x11, 0xea, 0x1a, 0xdb, 0x9b, 0x8e,
	0x1c, 0x95, 0xbb, 0xaf, 0x46, 0xb9, 0xfb, 0xfa, 0x0c, 0xba, 0xda, 0x3b, 0x4c, 0xe2, 0x04, 0x50,
	0xde, 0xf0, 0x85, 0x4f, 0xc7, 0x4c, 0xb6, 0x4f, 0x17, 0x33, 0xf9, 0xd3, 0x98, 0x45, 0x0f, 0xa5,
	0xb4, 0xca, 0x12, 0x23, 0x9d, 0x1e, 0x0a, 0x05, 0xcb, 0x7b, 0x52, 0x6a, 0x73, 0x75, 0xd1, 0x16,
	0xf9, 0xee, 0x43, 0x07, 0xf3, 0x9d, 0x3f, 0x1e, 0x31, 0xe4, 0xeb, 0x42, 0xe4, 0xe8, 0x67, 0xe4,
	0x2d, 0x68, 0x2b, 0xd8, 0x71, 0x26, 0xbe, 0x92, 0xe5, 0xd2, 0x2c, 0x57, 0x4e, 0x44, 0x8e, 0xc4,
	0xa7, 0x18, 0xd8, 0x7f, 0x35, 0xa0, 0xa5, 0x09, 0xcb, 0x77, 0x78, 0xa3, 0x7c, 0x87, 0x3f, 0xcf,
	0xdd, 0xab, 0x7c, 0x71, 0x37, 0x5f, 0x77, 0x71, 0xaf, 0x15, 0x2e, 0xee, 0xe7, 0x68, 0x93, 0xed,
	0x5f, 0x1b, 0xd0, 0xbe, 0xa7, 0x11, 0x47, 0x72, 0x91, 0xc5, 0xb8, 0xa5, 0x1c, 0x93, 0x8b, 0x1c,
	0x06, 0x55, 0x59, 0xc8, 0xad, 0xde, 0x81, 0x95, 0x8c, 0x91, 0xb4, 0xe8, 0x6d, 0xa4, 0x34, 0xad,
	0x3c, 0x88, 0xf8, 0xa5, 0xf4, 0x85, 0x11, 0xfc, 0x93, 0x01, 0xcb, 0x39, 0x85, 0x04, 0x2a, 0xd5,
	0xde, 0x53, 0x37, 0xd2, 0xb1, 0xae, 0x98, 0xe3, 0xae, 0x54, 0x51, 0xc6, 0xc9, 0x82, 0x56, 0xb6,
	0xa2, 0x6a, 0x92, 0x20, 0x5d, 0xad, 0x22, 0x56, 0xb5, 0x52, 0xac, 0xf6, 0xff, 0xbe, 0x08, 0x2d,
	0xac, 0xb6, 0x27, 0x11, 0x75, 0x19, 0xf9, 0xa3, 0x01, 0x1b, 0x95, 0x7f, 0x4d, 0x90, 0x6b, 0x95,
	0x5f, 0x26, 0x0a, 0xff, 0x03, 0x6d, 0xbd, 0xff, 0x1a, 0x2d, 0x3c, 0x0a, 0xed, 0x1f, 0xfe, 0xe6,
	0xdb, 0x7f, 0xfd, 0x61, 0xe1, 0xba, 0xbd, 0x9b, 0xfb, 0x07, 0x6b, 0xef, 0xd5, 0xfe, 0x5e, 0xe1,
	0xe3, 0xc8, 0x50, 0xb9, 0x7f, 0x09, 0x6d, 0xfd, 0x0f, 0x0c, 0xb2, 0x5d, 0xf8, 0x6a, 0xaa, 0x7f,
	0x98, 0xdc, 0xda, 0x39, 0xeb, 0x73, 0xac, 0xfd, 0x81, 0x70, 0xde, 0xb3, 0xaf, 0x94, 0x9c, 0xcb,
	0x0f, 0x29, 0x58, 0x6d, 0x64, 0x0c, 0x2d, 0xed, 0x73, 0x19, 0xd9, 0xaa, 0xfc, 0x6a, 0x87, 0x0e,
	0xb7, 0xcf, 0xf8, 0xa2, 0x67, 0xbf, 0x2f, 0xfc, 0x59, 0xf6, 0xe5, 0x92, 0xbf, 0x97, 0x89, 0x76,
	0xd1, 0x1d, 0xde, 0x73, 0x0a, 0xee, 0x72, 0x1f, 0x2b, 0x0a, 0xee, 0xf2, 0xd7, 0xe6, 0xd7, 0xba,
	0xc3, 0x0e, 0x99, 0x78, 0x00, 0xd9, 0x2d, 0x81, 0x5c, 0xaa, 0xba, 0x39, 0xa0, 0xb3, 0xad, 0xd3,
	0x2f, 0x15, 0xf6, 0x35, 0xe1, 0xeb, 0x8a, 0xbd, 0x73, 0x8a, 0x2f, 0x51, 0x7a, 0x84, 0xc2, 0x92,
	0x6a, 0x86, 0xc8, 0x66, 0xb9, 0x3d, 0x42, 0x37, 0xdd, 0xd3, 0xfa, 0x26, 0xdb, 0x16, 0x4e, 0x76,
	0xec, 0xad, 0x53, 0x9c, 0x0c, 0xc3, 0xf8, 0x60, 0xe3, 0xab, 0x4e, 0x7f, 0x2f, 0xfb, 0x47, 0xf4,
	0xc7, 0xf8, 0xf3, 0xac, 0x2e, 0xfe, 0xbe, 0xfc, 0xe4, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x97,
	0x41, 0x7d, 0x61, 0x2d, 0x1d, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DouyinTradeClient is the client API for DouyinTrade service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DouyinTradeClient interface {
	// 同步退款审核结果
	MerchantAuditCallback(ctx context.Context, in *MerchantAuditCallbackRequest, opts ...grpc.CallOption) (*MerchantAuditCallbackResponse, error)
	// 发起退款
	CreateRefund(ctx context.Context, in *CreateRefundRequest, opts ...grpc.CallOption) (*CreateREfundResponse, error)
	// 查询退款
	QueryRefund(ctx context.Context, in *QueryRefundRequest, opts ...grpc.CallOption) (*QueryRefundResponse, error)
	// //查询分账 开发者可通过此接口查询订单的分账记录。
	QuerySettle(ctx context.Context, in *QuerySettleRequest, opts ...grpc.CallOption) (*QuerySettleResponse, error)
	// 查询订单信息 查询异常订单的支付状态，确认订单是否交易成功。
	QueryOrder(ctx context.Context, in *QueryOrderRequest, opts ...grpc.CallOption) (*QueryOrderResponse, error)
	// 查询订单CPS信息。可用于判断订单是否为 CPS 订单。返回数据包含订单的支付、CPS、退款、核销等信息。
	QueryCps(ctx context.Context, in *QueryCpsRequest, opts ...grpc.CallOption) (*QueryCpsResponse, error)
}

type douyinTradeClient struct {
	cc *grpc.ClientConn
}

func NewDouyinTradeClient(cc *grpc.ClientConn) DouyinTradeClient {
	return &douyinTradeClient{cc}
}

func (c *douyinTradeClient) MerchantAuditCallback(ctx context.Context, in *MerchantAuditCallbackRequest, opts ...grpc.CallOption) (*MerchantAuditCallbackResponse, error) {
	out := new(MerchantAuditCallbackResponse)
	err := c.cc.Invoke(ctx, "/douyin.DouyinTrade/MerchantAuditCallback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *douyinTradeClient) CreateRefund(ctx context.Context, in *CreateRefundRequest, opts ...grpc.CallOption) (*CreateREfundResponse, error) {
	out := new(CreateREfundResponse)
	err := c.cc.Invoke(ctx, "/douyin.DouyinTrade/CreateRefund", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *douyinTradeClient) QueryRefund(ctx context.Context, in *QueryRefundRequest, opts ...grpc.CallOption) (*QueryRefundResponse, error) {
	out := new(QueryRefundResponse)
	err := c.cc.Invoke(ctx, "/douyin.DouyinTrade/QueryRefund", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *douyinTradeClient) QuerySettle(ctx context.Context, in *QuerySettleRequest, opts ...grpc.CallOption) (*QuerySettleResponse, error) {
	out := new(QuerySettleResponse)
	err := c.cc.Invoke(ctx, "/douyin.DouyinTrade/QuerySettle", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *douyinTradeClient) QueryOrder(ctx context.Context, in *QueryOrderRequest, opts ...grpc.CallOption) (*QueryOrderResponse, error) {
	out := new(QueryOrderResponse)
	err := c.cc.Invoke(ctx, "/douyin.DouyinTrade/QueryOrder", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *douyinTradeClient) QueryCps(ctx context.Context, in *QueryCpsRequest, opts ...grpc.CallOption) (*QueryCpsResponse, error) {
	out := new(QueryCpsResponse)
	err := c.cc.Invoke(ctx, "/douyin.DouyinTrade/QueryCps", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DouyinTradeServer is the server API for DouyinTrade service.
type DouyinTradeServer interface {
	// 同步退款审核结果
	MerchantAuditCallback(context.Context, *MerchantAuditCallbackRequest) (*MerchantAuditCallbackResponse, error)
	// 发起退款
	CreateRefund(context.Context, *CreateRefundRequest) (*CreateREfundResponse, error)
	// 查询退款
	QueryRefund(context.Context, *QueryRefundRequest) (*QueryRefundResponse, error)
	// //查询分账 开发者可通过此接口查询订单的分账记录。
	QuerySettle(context.Context, *QuerySettleRequest) (*QuerySettleResponse, error)
	// 查询订单信息 查询异常订单的支付状态，确认订单是否交易成功。
	QueryOrder(context.Context, *QueryOrderRequest) (*QueryOrderResponse, error)
	// 查询订单CPS信息。可用于判断订单是否为 CPS 订单。返回数据包含订单的支付、CPS、退款、核销等信息。
	QueryCps(context.Context, *QueryCpsRequest) (*QueryCpsResponse, error)
}

// UnimplementedDouyinTradeServer can be embedded to have forward compatible implementations.
type UnimplementedDouyinTradeServer struct {
}

func (*UnimplementedDouyinTradeServer) MerchantAuditCallback(ctx context.Context, req *MerchantAuditCallbackRequest) (*MerchantAuditCallbackResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method MerchantAuditCallback not implemented")
}
func (*UnimplementedDouyinTradeServer) CreateRefund(ctx context.Context, req *CreateRefundRequest) (*CreateREfundResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRefund not implemented")
}
func (*UnimplementedDouyinTradeServer) QueryRefund(ctx context.Context, req *QueryRefundRequest) (*QueryRefundResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryRefund not implemented")
}
func (*UnimplementedDouyinTradeServer) QuerySettle(ctx context.Context, req *QuerySettleRequest) (*QuerySettleResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QuerySettle not implemented")
}
func (*UnimplementedDouyinTradeServer) QueryOrder(ctx context.Context, req *QueryOrderRequest) (*QueryOrderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryOrder not implemented")
}
func (*UnimplementedDouyinTradeServer) QueryCps(ctx context.Context, req *QueryCpsRequest) (*QueryCpsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryCps not implemented")
}

func RegisterDouyinTradeServer(s *grpc.Server, srv DouyinTradeServer) {
	s.RegisterService(&_DouyinTrade_serviceDesc, srv)
}

func _DouyinTrade_MerchantAuditCallback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MerchantAuditCallbackRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DouyinTradeServer).MerchantAuditCallback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/douyin.DouyinTrade/MerchantAuditCallback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DouyinTradeServer).MerchantAuditCallback(ctx, req.(*MerchantAuditCallbackRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DouyinTrade_CreateRefund_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRefundRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DouyinTradeServer).CreateRefund(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/douyin.DouyinTrade/CreateRefund",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DouyinTradeServer).CreateRefund(ctx, req.(*CreateRefundRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DouyinTrade_QueryRefund_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryRefundRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DouyinTradeServer).QueryRefund(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/douyin.DouyinTrade/QueryRefund",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DouyinTradeServer).QueryRefund(ctx, req.(*QueryRefundRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DouyinTrade_QuerySettle_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QuerySettleRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DouyinTradeServer).QuerySettle(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/douyin.DouyinTrade/QuerySettle",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DouyinTradeServer).QuerySettle(ctx, req.(*QuerySettleRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DouyinTrade_QueryOrder_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryOrderRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DouyinTradeServer).QueryOrder(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/douyin.DouyinTrade/QueryOrder",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DouyinTradeServer).QueryOrder(ctx, req.(*QueryOrderRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DouyinTrade_QueryCps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryCpsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DouyinTradeServer).QueryCps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/douyin.DouyinTrade/QueryCps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DouyinTradeServer).QueryCps(ctx, req.(*QueryCpsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _DouyinTrade_serviceDesc = grpc.ServiceDesc{
	ServiceName: "douyin.DouyinTrade",
	HandlerType: (*DouyinTradeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MerchantAuditCallback",
			Handler:    _DouyinTrade_MerchantAuditCallback_Handler,
		},
		{
			MethodName: "CreateRefund",
			Handler:    _DouyinTrade_CreateRefund_Handler,
		},
		{
			MethodName: "QueryRefund",
			Handler:    _DouyinTrade_QueryRefund_Handler,
		},
		{
			MethodName: "QuerySettle",
			Handler:    _DouyinTrade_QuerySettle_Handler,
		},
		{
			MethodName: "QueryOrder",
			Handler:    _DouyinTrade_QueryOrder_Handler,
		},
		{
			MethodName: "QueryCps",
			Handler:    _DouyinTrade_QueryCps_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/douyin/trade.proto",
}
