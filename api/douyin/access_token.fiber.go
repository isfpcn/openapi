// Code generated by protoc-gen-fiber v0.1, DO NOT EDIT.
// source: api/douyin/access_token.proto

package douyin

import (
	"context"

	"github.com/gogo/protobuf/proto"
	"github.com/gofiber/fiber/v2"
)

var (
	PathDouyinAppsV2Token = "/douyin/apps/v2/token"
)

// DouyinAccessTokenFiberServer is the server API for DouyinAccessToken service.
// 抖音-接口调用凭证
type DouyinAccessTokenFiberServer interface {
	// access_token 是小程序的全局唯一调用凭据，开发者调用小程序支付时需要使用 access_token。access_token 的有效期为 2 个小时，需要定时刷新 access_token，重复获取会导致之前一次获取的 access_token 的有效期缩短为 5 分钟。
	GetAccessToken(ctx context.Context, req *GetAccessTokenRequest) (resp *GetAccessTokenResponse, err error)
}

var (
	DouyinAccessTokenSvc       DouyinAccessTokenFiberServer
	DouyinAccessTokenWriter    func(c *fiber.Ctx, message proto.Message) error
	DouyinAccessTokenValidater func(message proto.Message) error
)

func _DouyinAccessToken_GetAccessToken0_HTTP_Handler(c *fiber.Ctx) error {
	p := new(GetAccessTokenRequest)
	if err := c.BodyParser(p); err != nil {
		return err
	}
	if err := DouyinAccessTokenValidater(p); err != nil {
		return err
	}
	resp, err := DouyinAccessTokenSvc.GetAccessToken(c.UserContext(), p)
	if err != nil {
		return err
	}
	return DouyinAccessTokenWriter(c, resp)
}

// RegisterDouyinAccessTokenFiberServer Register the fiber route
func RegisterDouyinAccessTokenFiberServer(e *fiber.App, server DouyinAccessTokenFiberServer, w func(c *fiber.Ctx, message proto.Message) error, v func(message proto.Message) error) {
	DouyinAccessTokenSvc = server
	DouyinAccessTokenWriter = w
	DouyinAccessTokenValidater = v
	e.Post("/douyin/apps/v2/token", _DouyinAccessToken_GetAccessToken0_HTTP_Handler)
}
