// Code generated by protoc-gen-fiber v0.1, DO NOT EDIT.
// source: api/douyin/trade.proto

package douyin

import (
	"context"

	"github.com/gogo/protobuf/proto"
	"github.com/gofiber/fiber/v2"
)

var (
	PathDouyinTradeV2MerchantAuditCallback = "/douyin/trade/v2/merchant_audit_callback"
	PathDouyinTradeV2CreateRefund          = "/douyin/trade/v2/create_refund"
	PathDouyinTradeV2QueryRefund           = "/douyin/trade/v2/query_refund"
	PathDouyinTradeV2QuerySettle           = "/douyin/trade/v2/query_settle"
	PathDouyinTradeV2QueryOrder            = "/douyin/trade/v2/query_order"
	PathDouyinTradeV2QueryCps              = "/douyin/trade/v2/query_cps"
)

// DouyinTradeFiberServer is the server API for DouyinTrade service.
// 抖音-交易系统
type DouyinTradeFiberServer interface {
	// 同步退款审核结果
	MerchantAuditCallback(ctx context.Context, req *MerchantAuditCallbackRequest) (resp *MerchantAuditCallbackResponse, err error)
	// 发起退款
	CreateRefund(ctx context.Context, req *CreateRefundRequest) (resp *CreateREfundResponse, err error)
	// 查询退款
	QueryRefund(ctx context.Context, req *QueryRefundRequest) (resp *QueryRefundResponse, err error)
	// //查询分账 开发者可通过此接口查询订单的分账记录。
	QuerySettle(ctx context.Context, req *QuerySettleRequest) (resp *QuerySettleResponse, err error)
	// 查询订单信息 查询异常订单的支付状态，确认订单是否交易成功。
	QueryOrder(ctx context.Context, req *QueryOrderRequest) (resp *QueryOrderResponse, err error)
	// 查询订单CPS信息。可用于判断订单是否为 CPS 订单。返回数据包含订单的支付、CPS、退款、核销等信息。
	QueryCps(ctx context.Context, req *QueryCpsRequest) (resp *QueryCpsResponse, err error)
}

var (
	DouyinTradeSvc       DouyinTradeFiberServer
	DouyinTradeWriter    func(c *fiber.Ctx, message proto.Message) error
	DouyinTradeValidater func(message proto.Message) error
)

func _DouyinTrade_MerchantAuditCallback0_HTTP_Handler(c *fiber.Ctx) error {
	p := new(MerchantAuditCallbackRequest)
	if err := c.BodyParser(p); err != nil {
		return err
	}
	resp, err := DouyinTradeSvc.MerchantAuditCallback(c.UserContext(), p)
	if err != nil {
		return err
	}
	return DouyinTradeWriter(c, resp)
}

func _DouyinTrade_CreateRefund0_HTTP_Handler(c *fiber.Ctx) error {
	p := new(CreateRefundRequest)
	if err := c.BodyParser(p); err != nil {
		return err
	}
	resp, err := DouyinTradeSvc.CreateRefund(c.UserContext(), p)
	if err != nil {
		return err
	}
	return DouyinTradeWriter(c, resp)
}

func _DouyinTrade_QueryRefund0_HTTP_Handler(c *fiber.Ctx) error {
	p := new(QueryRefundRequest)
	if err := c.BodyParser(p); err != nil {
		return err
	}
	if err := DouyinTradeValidater(p); err != nil {
		return err
	}
	resp, err := DouyinTradeSvc.QueryRefund(c.UserContext(), p)
	if err != nil {
		return err
	}
	return DouyinTradeWriter(c, resp)
}

func _DouyinTrade_QuerySettle0_HTTP_Handler(c *fiber.Ctx) error {
	p := new(QuerySettleRequest)
	if err := c.BodyParser(p); err != nil {
		return err
	}
	if err := DouyinTradeValidater(p); err != nil {
		return err
	}
	resp, err := DouyinTradeSvc.QuerySettle(c.UserContext(), p)
	if err != nil {
		return err
	}
	return DouyinTradeWriter(c, resp)
}

func _DouyinTrade_QueryOrder0_HTTP_Handler(c *fiber.Ctx) error {
	p := new(QueryOrderRequest)
	if err := c.BodyParser(p); err != nil {
		return err
	}
	if err := DouyinTradeValidater(p); err != nil {
		return err
	}
	resp, err := DouyinTradeSvc.QueryOrder(c.UserContext(), p)
	if err != nil {
		return err
	}
	return DouyinTradeWriter(c, resp)
}

func _DouyinTrade_QueryCps0_HTTP_Handler(c *fiber.Ctx) error {
	p := new(QueryCpsRequest)
	if err := c.BodyParser(p); err != nil {
		return err
	}
	if err := DouyinTradeValidater(p); err != nil {
		return err
	}
	resp, err := DouyinTradeSvc.QueryCps(c.UserContext(), p)
	if err != nil {
		return err
	}
	return DouyinTradeWriter(c, resp)
}

// RegisterDouyinTradeFiberServer Register the fiber route
func RegisterDouyinTradeFiberServer(e *fiber.App, server DouyinTradeFiberServer, w func(c *fiber.Ctx, message proto.Message) error, v func(message proto.Message) error) {
	DouyinTradeSvc = server
	DouyinTradeWriter = w
	DouyinTradeValidater = v
	e.Post("/douyin/trade/v2/merchant_audit_callback", _DouyinTrade_MerchantAuditCallback0_HTTP_Handler)
	e.Post("/douyin/trade/v2/create_refund", _DouyinTrade_CreateRefund0_HTTP_Handler)
	e.Post("/douyin/trade/v2/query_refund", _DouyinTrade_QueryRefund0_HTTP_Handler)
	e.Post("/douyin/trade/v2/query_settle", _DouyinTrade_QuerySettle0_HTTP_Handler)
	e.Post("/douyin/trade/v2/query_order", _DouyinTrade_QueryOrder0_HTTP_Handler)
	e.Post("/douyin/trade/v2/query_cps", _DouyinTrade_QueryCps0_HTTP_Handler)
}
