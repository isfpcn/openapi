// Code generated by protoc-gen-fiber v0.1, DO NOT EDIT.
// source: api/douyin/product.proto

package douyin

import (
	"context"

	"github.com/gogo/protobuf/proto"
	"github.com/gofiber/fiber/v2"
)

var (
	PathDouyinProductApiUploadResource      = "/douyin/product/api/upload_resource"
	PathDouyinProductApiQueryResourceStatus = "/douyin/product/api/query_resource_status"
	PathDouyinProductApiAdd                 = "/douyin/product/api/add"
	PathDouyinProductApiEdit                = "/douyin/product/api/edit"
	PathDouyinProductApiModifyStatus        = "/douyin/product/api/modify_status"
	PathDouyinProductApiQuery               = "/douyin/product/api/query"
	PathDouyinProductApiModifyNoAudit       = "/douyin/product/api/modify_no_audit"
	PathDouyinProductApiQueryTemplateInfo   = "/douyin/product/api/query_template_info"
	PathDouyinProductApiModifyRefundRule    = "/douyin/product/api/modify_refund_rule"
	PathDouyinProductApiQueryRefundRuleMeta = "/douyin/product/api/query_refund_rule_meta"
	PathDouyinProductApiQueryClassInfo      = "/douyin/product/api/query_class_info"
)

// DouyinProductFiberServer is the server API for DouyinProduct service.
// 抖音-泛知识-课程库系统
type DouyinProductFiberServer interface {
	// 【泛知识】上传课程资源
	UploadResource(ctx context.Context, req *UploadResourceRequest) (resp *UploadResourceResponse, err error)
	// 【泛知识】查询课程资源上传状态
	QueryResourceStatus(ctx context.Context, req *QueryResourceStatusRequest) (resp *QueryResourceStatusResponse, err error)
	// 【泛知识】添加课程
	Add(ctx context.Context, req *AddRequest) (resp *AddResponse, err error)
	// 【泛知识】修改课程
	Edit(ctx context.Context, req *EditRequest) (resp *EditResponse, err error)
	// 【泛知识】修改课程状态
	ModifyStatus(ctx context.Context, req *ModifyStatusRequest) (resp *ModifyStatusResponse, err error)
	// 【泛知识】查询课程
	Query(ctx context.Context, req *QueryRequest) (resp *QueryResponse, err error)
	// 【泛知识】修改课程免审
	ModifyNoAudit(ctx context.Context, req *ModifyNoAuditRequest) (resp *ModifyNoAuditResponse, err error)
	// 【泛知识】查询免审课程
	QueryTemplateInfo(ctx context.Context, req *QueryTemplateInfoRequest) (resp *QueryTemplateInfoResponse, err error)
	// 【泛知识】修改商品退款规则
	ModifyRefundRule(ctx context.Context, req *ModifyRefundRuleRequest) (resp *ModifyRefundRuleResponse, err error)
	// 【泛知识】查询可选退款规则
	QueryRefundRuleMeta(ctx context.Context, req *QueryRefundRuleMetaRequest) (resp *QueryRefundRuleMetaResponse, err error)
	// 【泛知识】查询课程类目信息
	QueryClassInfo(ctx context.Context, req *QueryClassInfoRequest) (resp *QueryClassInfoResponse, err error)
}

var (
	DouyinProductSvc       DouyinProductFiberServer
	DouyinProductWriter    func(c *fiber.Ctx, message proto.Message) error
	DouyinProductValidater func(message proto.Message) error
)

func _DouyinProduct_UploadResource0_HTTP_Handler(c *fiber.Ctx) error {
	p := new(UploadResourceRequest)
	if err := c.BodyParser(p); err != nil {
		return err
	}
	resp, err := DouyinProductSvc.UploadResource(c.UserContext(), p)
	if err != nil {
		return err
	}
	return DouyinProductWriter(c, resp)
}

func _DouyinProduct_QueryResourceStatus0_HTTP_Handler(c *fiber.Ctx) error {
	p := new(QueryResourceStatusRequest)
	if err := c.BodyParser(p); err != nil {
		return err
	}
	if err := DouyinProductValidater(p); err != nil {
		return err
	}
	resp, err := DouyinProductSvc.QueryResourceStatus(c.UserContext(), p)
	if err != nil {
		return err
	}
	return DouyinProductWriter(c, resp)
}

func _DouyinProduct_Add0_HTTP_Handler(c *fiber.Ctx) error {
	p := new(AddRequest)
	if err := c.BodyParser(p); err != nil {
		return err
	}
	resp, err := DouyinProductSvc.Add(c.UserContext(), p)
	if err != nil {
		return err
	}
	return DouyinProductWriter(c, resp)
}

func _DouyinProduct_Edit0_HTTP_Handler(c *fiber.Ctx) error {
	p := new(EditRequest)
	if err := c.BodyParser(p); err != nil {
		return err
	}
	if err := DouyinProductValidater(p); err != nil {
		return err
	}
	resp, err := DouyinProductSvc.Edit(c.UserContext(), p)
	if err != nil {
		return err
	}
	return DouyinProductWriter(c, resp)
}

func _DouyinProduct_ModifyStatus0_HTTP_Handler(c *fiber.Ctx) error {
	p := new(ModifyStatusRequest)
	if err := c.BodyParser(p); err != nil {
		return err
	}
	if err := DouyinProductValidater(p); err != nil {
		return err
	}
	resp, err := DouyinProductSvc.ModifyStatus(c.UserContext(), p)
	if err != nil {
		return err
	}
	return DouyinProductWriter(c, resp)
}

func _DouyinProduct_Query0_HTTP_Handler(c *fiber.Ctx) error {
	p := new(QueryRequest)
	if err := c.BodyParser(p); err != nil {
		return err
	}
	if err := DouyinProductValidater(p); err != nil {
		return err
	}
	resp, err := DouyinProductSvc.Query(c.UserContext(), p)
	if err != nil {
		return err
	}
	return DouyinProductWriter(c, resp)
}

func _DouyinProduct_ModifyNoAudit0_HTTP_Handler(c *fiber.Ctx) error {
	p := new(ModifyNoAuditRequest)
	if err := c.BodyParser(p); err != nil {
		return err
	}
	if err := DouyinProductValidater(p); err != nil {
		return err
	}
	resp, err := DouyinProductSvc.ModifyNoAudit(c.UserContext(), p)
	if err != nil {
		return err
	}
	return DouyinProductWriter(c, resp)
}

func _DouyinProduct_QueryTemplateInfo0_HTTP_Handler(c *fiber.Ctx) error {
	p := new(QueryTemplateInfoRequest)
	if err := c.BodyParser(p); err != nil {
		return err
	}
	if err := DouyinProductValidater(p); err != nil {
		return err
	}
	resp, err := DouyinProductSvc.QueryTemplateInfo(c.UserContext(), p)
	if err != nil {
		return err
	}
	return DouyinProductWriter(c, resp)
}

func _DouyinProduct_ModifyRefundRule0_HTTP_Handler(c *fiber.Ctx) error {
	p := new(ModifyRefundRuleRequest)
	if err := c.BodyParser(p); err != nil {
		return err
	}
	if err := DouyinProductValidater(p); err != nil {
		return err
	}
	resp, err := DouyinProductSvc.ModifyRefundRule(c.UserContext(), p)
	if err != nil {
		return err
	}
	return DouyinProductWriter(c, resp)
}

func _DouyinProduct_QueryRefundRuleMeta0_HTTP_Handler(c *fiber.Ctx) error {
	p := new(QueryRefundRuleMetaRequest)
	if err := c.BodyParser(p); err != nil {
		return err
	}
	if err := DouyinProductValidater(p); err != nil {
		return err
	}
	resp, err := DouyinProductSvc.QueryRefundRuleMeta(c.UserContext(), p)
	if err != nil {
		return err
	}
	return DouyinProductWriter(c, resp)
}

func _DouyinProduct_QueryClassInfo0_HTTP_Handler(c *fiber.Ctx) error {
	p := new(QueryClassInfoRequest)
	if err := c.BodyParser(p); err != nil {
		return err
	}
	if err := DouyinProductValidater(p); err != nil {
		return err
	}
	resp, err := DouyinProductSvc.QueryClassInfo(c.UserContext(), p)
	if err != nil {
		return err
	}
	return DouyinProductWriter(c, resp)
}

// RegisterDouyinProductFiberServer Register the fiber route
func RegisterDouyinProductFiberServer(e *fiber.App, server DouyinProductFiberServer, w func(c *fiber.Ctx, message proto.Message) error, v func(message proto.Message) error) {
	DouyinProductSvc = server
	DouyinProductWriter = w
	DouyinProductValidater = v
	e.Post("/douyin/product/api/upload_resource", _DouyinProduct_UploadResource0_HTTP_Handler)
	e.Post("/douyin/product/api/query_resource_status", _DouyinProduct_QueryResourceStatus0_HTTP_Handler)
	e.Post("/douyin/product/api/add", _DouyinProduct_Add0_HTTP_Handler)
	e.Post("/douyin/product/api/edit", _DouyinProduct_Edit0_HTTP_Handler)
	e.Post("/douyin/product/api/modify_status", _DouyinProduct_ModifyStatus0_HTTP_Handler)
	e.Post("/douyin/product/api/query", _DouyinProduct_Query0_HTTP_Handler)
	e.Post("/douyin/product/api/modify_no_audit", _DouyinProduct_ModifyNoAudit0_HTTP_Handler)
	e.Post("/douyin/product/api/query_template_info", _DouyinProduct_QueryTemplateInfo0_HTTP_Handler)
	e.Post("/douyin/product/api/modify_refund_rule", _DouyinProduct_ModifyRefundRule0_HTTP_Handler)
	e.Post("/douyin/product/api/query_refund_rule_meta", _DouyinProduct_QueryRefundRuleMeta0_HTTP_Handler)
	e.Post("/douyin/product/api/query_class_info", _DouyinProduct_QueryClassInfo0_HTTP_Handler)
}
